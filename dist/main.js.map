{"version":3,"file":"main.js","mappings":"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","sources":["webpack://citylights/webpack/runtime/chunk loaded","webpack://citylights/./src/app/actions.ts","webpack://citylights/./src/app/frame-transition-handlers.ts","webpack://citylights/./src/app/persistence.ts","webpack://citylights/./src/components/character.ts","webpack://citylights/./src/components/collision.ts","webpack://citylights/./src/components/material.ts","webpack://citylights/./src/components/mesh.ts","webpack://citylights/./src/components/position.ts","webpack://citylights/./src/components/rotation.ts","webpack://citylights/./src/components/shape.ts","webpack://citylights/./src/components/ui-item.ts","webpack://citylights/./src/components/velocity.ts","webpack://citylights/./src/index.ts","webpack://citylights/./src/levels/level.h.ts","webpack://citylights/./src/levels/topdown.ts","webpack://citylights/./src/models/game-store.ts","webpack://citylights/./src/models/rect.ts","webpack://citylights/./src/models/tags.ts","webpack://citylights/./src/models/vector2d.ts","webpack://citylights/./src/prefabs/game.ts","webpack://citylights/./src/prefabs/menu.ts","webpack://citylights/./src/prefabs/pause.ts","webpack://citylights/./src/prefabs/savable.ts","webpack://citylights/./src/states/game.ts","webpack://citylights/./src/states/menu.ts","webpack://citylights/./src/states/pause.ts","webpack://citylights/./src/systems/character.ts","webpack://citylights/./src/systems/collision.ts","webpack://citylights/./src/systems/input.ts","webpack://citylights/./src/systems/menu.ts","webpack://citylights/./src/systems/pause.ts","webpack://citylights/./src/systems/physics.ts","webpack://citylights/./src/systems/render-game.ts","webpack://citylights/./src/systems/render-ui.ts","webpack://citylights/webpack/bootstrap","webpack://citylights/webpack/runtime/define property getters","webpack://citylights/webpack/runtime/hasOwnProperty shorthand","webpack://citylights/webpack/runtime/make namespace object","webpack://citylights/webpack/runtime/jsonp chunk loading","webpack://citylights/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export enum EActions {\n    Continue,\n    Exit,\n    Play,\n}\n","import {GameStore} from \"../models/game-store\";\nimport {ITransitionActions} from \"sim-ecs\";\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp?: number[]){\n    const clocktime = performance.now() * 1e-3\n    let seconds = Math.floor(clocktime)\n    let nanoseconds = Math.floor((clocktime%1)*1e9)\n    if (previousTimestamp) {\n      seconds = seconds - previousTimestamp[0]\n      nanoseconds = nanoseconds - previousTimestamp[1]\n      if (nanoseconds<0) {\n        seconds--\n        nanoseconds += 1e9\n      }\n    }\n  \n    return [seconds, nanoseconds];\n}\n\nconst hrtimeToSeconds = (s_ns: number[]) => (\n  s_ns[0] + s_ns[1] * 1e-9\n);\n\nlet lastTransition = hrtime();\n\nlet deltaSum = 0;\n\nexport async function beforeFrameHandler(actions: ITransitionActions) {\n     // Update delta time\n    const gameStore = actions.getResource(GameStore);\n    gameStore.lastFrameDeltaTime = hrtimeToSeconds(\n      hrtime(lastTransition)\n    );\n\n    if (gameStore.lastFrameDeltaTime > 0.1) {\n      gameStore.lastFrameDeltaTime = 0.1;\n    }\n\n    gameStore.timeSinceLevelLoaded += \n      gameStore.lastFrameDeltaTime; \n\n    deltaSum += gameStore.lastFrameDeltaTime;\n    gameStore.medianFps = ++gameStore.ticks / deltaSum;\n\n    lastTransition = hrtime();\n\n    // Clear canvas\n    const ctx = actions.getResource(CanvasRenderingContext2D);\n    ctx.beginPath();\n    ctx.fillStyle = '#000';\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n}\n","import {ITransitionActions, Query, SerialFormat, TGroupHandle, WithTag} from \"sim-ecs\";\nimport {ETags} from \"../models/tags\";\n\n\nconst saveKey = 'save';\n\nexport function load(actions: ITransitionActions): TGroupHandle {\n    const save = localStorage.getItem(saveKey);\n\n    if (!save) {\n        throw new Error('No save available. Cannot load!');\n    }\n\n    const handle = actions.commands.load(SerialFormat.fromJSON(save));\n\n    return handle;\n}\n\nexport function save(actions: ITransitionActions) {\n    localStorage.setItem(saveKey, actions.save(new Query([WithTag(ETags.save)])).toJSON());\n}\n","export class Character {\n    constructor(\n        public name: string = '',\n    ) {}\n}","import { IEntity } from \"sim-ecs\";\nimport { Shape } from \"./shape\";\n\nexport class Collision {\n    constructor(\n        public shapeFromVisuals: boolean = true,\n        public shape: Shape | null = null\n    ) {\n        if (!shapeFromVisuals && !shape) {\n            throw new Error('Either copy the collision shape\\\n                from visuals or provide a new one')\n        } \n    }\n    \n    public collisionObjects: Set<IEntity> = new Set<IEntity>();\n    public occurred = false;\n}\n","export class Material {\n    constructor (\n        public color: string\n    ) {}\n}","import { IVector2D } from \"../models/vector2d\";\n\nexport class Mesh {\n    public isConvex: boolean;\n\n    constructor (public verticies: IVector2D[]) {\n        // TODO: test for convexness\n        this.isConvex = true;\n    }\n}","import { Vector2D } from \"../models/vector2d\";\n\nexport class Position extends Vector2D {}\n","export class Rotation {\n    constructor(public value: number) {}\n}","import { Rect } from \"../models/rect\";\nimport { Vector2D, vecZero } from \"../models/vector2d\";\nimport { Mesh } from \"./mesh\";\n\nexport enum ShapePrimitive {\n    Circle = 'circle',\n    Rect = 'rect',\n    Mesh = 'mesh',\n}\n\nexport enum ShapePivot {\n    TopLeft = 0,\n    TopMiddle = 1,\n    TopRight = 2,\n    Left = 3,\n    Middle = 4,\n    Right = 5,\n    BottomLeft = 6,\n    BottomMiddle = 7,\n    BottomRight = 8\n}\n\n// todo triangle, capsule\n\nexport class Shape {\n    public bBox: Rect = new Rect(0, 0, 0, 0);\n\n    public isBuilt = false;\n\n    /**\n     * \n     * @param dimensions (width,height) if rect, (diameter,any) if circle\n     * @param primitive Enum or string value\n     * @param mesh verticies data\n     */\n    constructor(\n        public zIndex = 0,\n        // TODO: make it real\n        public pivot = ShapePivot.Middle,\n        public dimensions: Vector2D = vecZero,\n        public primitive: ShapePrimitive = ShapePrimitive.Rect,\n        public mesh: Mesh | null = null,\n    ) {\n        \n    }\n\n    build() {\n        if (this.isBuilt) return;\n\n        console.log('Building shape', this);\n        if (this.primitive === ShapePrimitive.Mesh && !this.mesh) {\n            throw new Error('Shapes with mesh primitive\\\n                must provide a mesh data');\n        }\n        if (this.primitive !== ShapePrimitive.Mesh && !this.dimensions) {\n            console.error('dimensions:', this.dimensions,\n                'primitive:', this.primitive,\n                'mesh:', this.mesh);\n            throw new Error('Shapes with non-mesh primitive\\\n                must provide dimensions')\n        }\n\n        if (this.primitive === ShapePrimitive.Circle) {\n            // A center-positioned circle\n            // will fit into a mid-shifted\n            // square with side = diameter\n            const d = this.dimensions.x\n            const rad = d/2;\n            this.bBox.x = -rad;\n            this.bBox.y = -rad;\n            this.bBox.w = d;\n            this.bBox.h = d;\n        } else if (this.primitive === ShapePrimitive.Rect) {\n            // a top-left positioned rectangle\n            // is the bounding box itself\n            this.bBox.x = 0;\n            this.bBox.y = 0;\n            this.bBox.w = this.dimensions.x;\n            this.bBox.h = this.dimensions.y;\n        } else if (this.primitive === ShapePrimitive.Mesh && this.mesh) {\n            let minX = this.mesh.verticies[0].x;\n            let minY = this.mesh.verticies[0].y;\n\n            let maxX = this.mesh.verticies[0].x;\n            let maxY = this.mesh.verticies[0].y;\n\n            for (let i=1;i<this.mesh.verticies.length;++i){\n                const {x, y} = this.mesh.verticies[i];\n                if (x < minX) minX = x;\n                if (x > maxX) maxX = x;\n                if (y < minY) minY = y;\n                if (y > maxY) maxY = y;\n            }\n\n            this.bBox.x = minX;\n            this.bBox.y = minY;\n            this.bBox.w = maxX - minX;\n            this.bBox.h = maxY - minY;\n        }\n\n        this.isBuilt = true;\n    }\n\n    getBBox() {\n        return this.bBox;\n    }\n}\n","import {EActions} from \"../app/actions\";\n\nexport class UIItem {\n    public captionMod = (strIn: string) => strIn;\n\n    constructor(\n        public caption: string,\n        public color: string,\n        public fontSize: number,\n        public action?: EActions,\n        public active?: boolean,\n        public activeColor?: string,\n    ) {}\n\n    get finalCaption(): string {\n        return this.captionMod(this.caption);\n    }\n}","import { Vector2D } from \"../models/vector2d\";\n\nexport class Velocity extends Vector2D {}\n","import { Topdown } from './levels/topdown';\nimport './scss/app.scss';\n\nexport const prepareRenderContext = () => {\n    const canvasEle = document.querySelector('canvas');\n    if (!canvasEle) throw new Error('Could not find canvas element!');\n\n    const renderContext = canvasEle.getContext('2d');\n    if (!renderContext) throw new Error('Could not initialize 2D context');\n\n    const canvasBoundingRect = canvasEle.getBoundingClientRect();\n\n    canvasEle.width = canvasBoundingRect.width;\n    canvasEle.height = canvasBoundingRect.height;\n\n    renderContext.imageSmoothingEnabled = false;\n\n    return renderContext;\n}\n\nwindow.addEventListener('resize', prepareRenderContext);\n\nconst levels = {\n    'topdown': Topdown,\n};\n\ntype levelType = keyof typeof levels;\n\n// main function\n(async () => {\n    const options = Object.keys(levels)\n        .map((e,i) => (`${i+1}) ${e}`));\n    options.push('exit (or empty)');\n\n    let requestedLevel = 'topdown';\n\n    while (requestedLevel !== 'exit') {\n        const level: levelType = 'topdown';\n        let world = new levels[level];\n\n        await world.run();\n\n        requestedLevel = prompt('What level would you like to check next?\\n' +\n            options.join('\\n')\n        ) || 'exit';\n    }\n})().catch(console.error);\n","import { IWorld } from \"sim-ecs\";\nimport { prepareRenderContext } from \"..\";\nimport { beforeFrameHandler } from \"../app/frame-transition-handlers\";\nimport { MenuState } from \"../states/menu\";\n\nexport interface ILevel {\n    name: string;\n\n    // TODO: load from filesystem, from URL\n    // path: string; \n\n    world: IWorld;\n\n    /**\n     * Called right after the initialization, main loop goes here\n     */\n    run(): Promise<any>;\n\n    /**\n     * Release the resources to run another level\n     */\n    destroy(): void;\n}\n\nexport abstract class Level implements ILevel {\n\n    public world: IWorld;\n\n    constructor(public name: string) {\n        const world = this.createWorld();\n\n        if (!world) {\n            throw new Error('A level must have a non-null \\\n            resuling createWorld function');\n        }\n\n        this.world = world;\n\n        const renderContext = prepareRenderContext();\n\n        this.world.addResource(renderContext);\n    }\n\n    abstract createWorld(): IWorld;\n    \n    /**\n     * Override this method if you have to release more resources\n     * (audio, video, WebRTC, textures, files, etc.)\n     */\n    destroy(): void {\n        this.world.commands.stopRun();\n    }\n\n    async run() {\n        return this.world.run({\n            beforeStepHandler: beforeFrameHandler,\n            initialState: MenuState,\n        }).then(()=>this.destroy());\n    }\n}","import { ECS, IWorld } from \"sim-ecs\";\nimport { Character } from \"../components/character\";\nimport { Collision } from \"../components/collision\";\nimport { Material } from \"../components/material\";\nimport { Mesh } from \"../components/mesh\";\nimport { Position } from \"../components/position\";\nimport { Rotation } from \"../components/rotation\";\nimport { Shape } from \"../components/shape\";\nimport { UIItem } from \"../components/ui-item\";\nimport { Velocity } from \"../components/velocity\";\nimport { GameStore } from \"../models/game-store\";\nimport { CharacterSystem } from \"../systems/character\";\nimport { CollisionSystem } from \"../systems/collision\";\nimport { InputSystem } from \"../systems/input\";\nimport { MenuSystem } from \"../systems/menu\";\nimport { PauseSystem } from \"../systems/pause\";\nimport { PhysicsSystem } from \"../systems/physics\";\nimport { RenderGameSystem } from \"../systems/render-game\";\nimport { RenderUISystem } from \"../systems/render-ui\";\nimport { Level } from \"./level.h\";\n\nexport class Topdown extends Level {\n    constructor() {\n        super('topdown');\n\n        const gameStore = new GameStore();\n        \n        this.world.addResource(gameStore);\n    }\n\n    destroy() {\n        super.destroy();\n\n        const ctx = this.world.getResource(CanvasRenderingContext2D);\n        ctx.fillStyle = '#ececec';\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    }\n\n    createWorld(): IWorld {\n        return new ECS()\n            .buildWorld()\n            .withSystem(PhysicsSystem, [\n                CharacterSystem\n                // NetworkSystem\n            ])\n            .withSystem(CharacterSystem, [\n                CollisionSystem\n            ])\n            .withSystem(CollisionSystem, [\n                // NetworkSystem\n            ])\n            .withSystem(InputSystem)\n            .withSystem(MenuSystem, [\n                InputSystem\n            ])\n            .withSystem(PauseSystem, [\n                InputSystem\n            ])\n            .withSystem(RenderGameSystem, [\n                PhysicsSystem,\n                CharacterSystem,\n                // NetworkSystem,\n            ])\n            .withSystem(RenderUISystem, [\n                PhysicsSystem,\n                MenuSystem,\n                PauseSystem\n            ])\n            .withComponents(\n                Collision,\n                Material,\n                Mesh,\n                Position,\n                Rotation,\n                Shape,\n                UIItem,\n                Velocity,\n                Character,\n            )\n            .build();\n    }\n}","import { EKeyState } from '../systems/input'\nimport {IState} from \"sim-ecs\";\n\nexport enum EMovement {\n    idle  = 0, // 0000\n    up    = 1, // 0001\n    down  = 2, // 0010\n    left  = 4, // 0100\n    right = 8, // 1000\n}\n\nexport class GameStore {\n    drawables = 0\n    rendered = 0\n\n    debugShapes = true\n    continue = false\n    currentState?: IState\n    lastFrameDeltaTime = 0\n    ticks = 0\n    medianFps = 30\n    timeSinceLevelLoaded = 0\n    input: {\n        actions: {\n            characterMovement: EMovement\n            menuConfirm: boolean\n            togglePause: boolean\n            menuMovement: EMovement\n        }\n        keyStates: {\n            [key: string]: EKeyState | undefined\n        }\n    } = {\n        actions: {\n            characterMovement: EMovement.idle,\n            menuConfirm: false,\n            menuMovement: EMovement.idle,\n            togglePause: false,\n        },\n        keyStates: {},\n    }\n}\n","export interface IRect {\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n}\n\nexport class Rect implements IRect {\n    constructor(\n        public x: number,\n        public y: number,\n        public w: number,\n        public h: number,\n    ) {}\n\n    static checkIntersects(r1: IRect, r2: IRect) {\n        return !(r2.x > r1.x+r1.w || \n            r2.x+r2.w < r1.x || \n            r2.y > r1.y+r1.h ||\n            r2.y+r2.h < r1.y);\n    }\n}","export enum ETags {\n    ui,\n    terrain,\n    character,\n    networkObject,\n    save,\n}\n","export interface IVector2D {\n    x: number;\n    y: number;\n}\n\nexport class Vector2D implements IVector2D {\n    buf = new ArrayBuffer(4);\n    f32 = new Float32Array(this.buf);\n    u32 = new Uint32Array(this.buf);\n\n    constructor(\n        public x = 0,\n        public y = 0,\n    ) {}\n\n    public addSelf(vec: Vector2D) {\n        this.x += vec.x;\n        this.y += vec.y;\n    }\n\n    public subSelf(vec: Vector2D) {\n        this.x -= vec.x;\n        this.y -= vec.y;\n    }\n\n    public scale(factor: number) {\n        this.x *= factor;\n        this.y *= factor;\n    }\n\n    public normalize() {\n        const inv = this.invSqrt();\n\n        this.x *= inv;\n        this.y *= inv;\n    }\n\n    public invSqrt(): number {\n        const x = this.x * this.x + this.y * this.y;\n        const x2 = 0.5 * (this.f32[0] = x);\n        this.u32[0] = (0x5f3759df - (this.u32[0] >> 1));\n        let y = this.f32[0];\n        y  = y * ( 1.5 - ( x2 * y * y ) );   // 1st iteration\n\n        return y;\n    }\n\n    public distance(to: Vector2D) {\n        const dx = to.x - this.x;\n        const dy = to.y - this.y;\n        return Math.sqrt(dx*dx + dy*dy);\n    }\n\n    public sqrDistance(to: Vector2D) {\n        const dx = to.x - this.x;\n        const dy = to.y - this.y;\n        return dx*dx + dy*dy;\n    }\n\n    public sqrLength() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    public length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n}\n\nexport const vecZero = new Vector2D(0, 0);\nexport const vecOne = new Vector2D(1, 1);\nexport const vecUp = new Vector2D(0, 1);\nexport const vecDown = new Vector2D(0, -1);\nexport const vecLeft = new Vector2D(-1, 0);\nexport const vecRight = new Vector2D(1, 0);","import {Shape, ShapePrimitive} from \"../components/shape\";\nimport {Collision} from \"../components/collision\";\nimport { Material } from \"../components/material\";\nimport { Position } from \"../components/position\";\nimport { Velocity } from \"../components/velocity\";\nimport { Vector2D } from \"../models/vector2d\";\nimport { Mesh } from \"../components/mesh\";\nimport { Rotation } from \"../components/rotation\";\nimport { CTagMarker } from \"sim-ecs\";\nimport { ETags } from \"../models/tags\";\n\n// This could also be pure JSON, but in order to use TS types and have static checks it is recommended to write it as TS array.\nexport const gamePrefab = [\n    {\n        Collision: <Collision>{},\n        Position: <Position>{\n            x: 60,\n            y: 60,\n        },\n        Velocity: <Velocity>{\n            x: 0,\n            y: 0, \n        },\n        Material: <Material>{\n            color: '#fdff03'\n        },\n        Shape: <Shape>{\n            dimensions: <Vector2D>{\n                x: 10,\n                y: 10,\n            },\n            primitive: ShapePrimitive.Rect,\n        },\n        Rotation: <Rotation>{\n            value: Math.PI * 3 / 4\n        }\n    },\n    {\n        Collision: <Collision>{},\n        Position: <Position>{\n            x: 30,\n            y: 100,\n        },\n        Velocity: <Velocity>{\n            x: 10,\n            y: 0, \n        },\n        Material: <Material>{\n            color: '#fdff03'\n        },\n        Shape: <Shape>{\n            zIndex: 10,\n            dimensions: <Vector2D>{\n                x: 20,\n            },\n            primitive: ShapePrimitive.Circle,\n        },\n    },\n    {\n        Collision: <Collision>{},\n        Position: <Position>{\n            x: 100,\n            y: 50,\n        },\n        Velocity: <Velocity>{\n            x: 0,\n            y: 0, \n        },\n        Material: <Material>{\n            color: '#fdff03'\n        },\n        Shape: <Shape>{\n            mesh: <Mesh>{\n                verticies: [\n                    {\n                        x: -10,\n                        y: -10\n                    },\n                    {\n                        x: 10,\n                        y: -10,\n                    },\n                    {\n                        x: 0,\n                        y: 10\n                    },\n                    {\n                        x: -5,\n                        y: 100\n                    }\n                ]\n            },\n            primitive: ShapePrimitive.Mesh,\n        },\n    },\n];\n","import { CTagMarker } from \"sim-ecs\";\nimport {EActions} from \"../app/actions\";\nimport { Position } from \"../components/position\";\nimport {UIItem} from \"../components/ui-item\";\nimport { ETags } from \"../models/tags\";\n\n// This could also be pure JSON, but in order to use TS types and have static checks it is recommended to write it as TS array.\nexport const menuPrefab = [\n    { // Title\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.05*1024,\n            y: 0.05*1024,\n        },\n        UIItem: <UIItem>{\n            caption: 'PONG',\n            color: '#ddd',\n            fontSize: 64,\n        }\n    },\n    { // Sub title\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.05*1024,\n            y: 0.12*1024,\n        },\n        UIItem: {\n            caption: 'A sim-ecs usage demo',\n            color: '#ddd',\n            fontSize: 24,\n        }\n    },\n    {\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.05*1024,\n            y: 0.2*1024,\n        },\n        UIItem: <UIItem>{\n            caption: 'How to play: Left paddle: W/S ; Right paddle: Up/Down ; Pause: Escape',\n            color: '#ddd',\n            fontSize: 24,\n        }\n    },\n    {\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.05*1024,\n            y: 0.24*1024,\n        },\n        UIItem: <UIItem>{\n            caption: 'The game will be saved upon pausing!',\n            color: '#ddd',\n            fontSize: 24,\n        }\n    },\n    {\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.15*1024,\n            y: 0.35*1024,\n        },\n        UIItem: <UIItem>{\n            action: EActions.Play,\n            active: true,\n            color: '#ddd',\n            caption: 'Play',\n            fontSize: 32,\n        },\n    },\n    {\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.15*1024,\n            y: 0.4*1024,\n        },\n        UIItem: <UIItem>{\n            action: EActions.Continue,\n            color: '#ddd',\n            caption: 'Continue',\n            fontSize: 32,\n        },\n    },\n    {\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.15*1024,\n            y: 0.45*1024,\n        },\n        UIItem: <UIItem>{\n            action: EActions.Exit,\n            color: '#ddd',\n            caption: 'Exit',\n            fontSize: 32,\n        },\n    },\n];\n","import { Position } from \"../components/position\";\nimport {UIItem} from \"../components/ui-item\";\n\n// This could also be pure JSON, but in order to use TS types and have static checks it is recommended to write it as TS array.\nexport const pausePrefab = [\n    {\n        Position: <Position>{\n            x: 0.05,\n            y: 0.02,\n        },\n        UIItem: <UIItem>{\n            caption: '❚❚ PAUSE',\n            color: '#ddd',\n            fontSize: 64,\n        }\n    },\n];\n","import {ETags} from \"../models/tags\";\nimport {Collision} from \"../components/collision\";\nimport {Shape, ShapePrimitive} from \"../components/shape\";\nimport {Velocity} from \"../components/velocity\";\nimport {CTagMarker} from 'sim-ecs';\nimport { Position } from \"../components/position\";\nimport { Material } from \"../components/material\";\nimport { Character } from \"../components/character\";\n\nexport const savablePrefab = [\n    { // Character\n        [CTagMarker]: [\n            ETags.character,\n            // ETags.save\n        ],\n        Character: <Character>{\n            name: 'XuPoH'\n        },\n        Velocity: <Velocity>{\n            x: 0,\n            y: 0,\n        },\n        Collision: <Collision>{},\n        Position: <Position>{\n            x: 250,\n            y: 50,\n        },\n        Shape: <Shape>{\n            zIndex: 11,\n            dimensions: {\n                x: 30,\n            },\n            primitive: ShapePrimitive.Circle\n        },\n        Material: <Material>{\n            color: '#cca',\n        },\n    },\n];","import {ITransitionActions, Query, SerialFormat, State, TGroupHandle, With, WithTag} from \"sim-ecs\";\nimport {InputSystem} from \"../systems/input\";\nimport {PauseSystem} from \"../systems/pause\";\nimport {gamePrefab} from \"../prefabs/game\";\nimport {Position} from \"../components/position\";\nimport {GameStore} from \"../models/game-store\";\nimport {Velocity} from \"../components/velocity\";\nimport {load} from \"../app/persistence\";\nimport {RenderUISystem} from \"../systems/render-ui\";\nimport {RenderGameSystem} from \"../systems/render-game\";\nimport {Shape} from \"../components/shape\";\nimport {PhysicsSystem} from \"../systems/physics\";\nimport {UIItem} from \"../components/ui-item\";\nimport {CollisionSystem} from \"../systems/collision\";\nimport { CharacterSystem } from \"../systems/character\";\nimport {savablePrefab} from \"../prefabs/savable\";\nimport { ETags } from \"../models/tags\";\n\nexport class GameState extends State {\n    _systems = [\n        CollisionSystem,\n        InputSystem,\n        CharacterSystem,\n        PauseSystem,\n        PhysicsSystem,\n        RenderGameSystem,\n        RenderUISystem,\n    ];\n    saveDataPrefabHandle?: TGroupHandle;\n    staticDataPrefabHandle?: TGroupHandle;\n\n    activate(actions: ITransitionActions) {\n        actions.getResource(GameStore).currentState = this;\n    }\n\n    async create(actions: ITransitionActions) {\n        const gameStore = actions.getResource(GameStore);\n\n        this.staticDataPrefabHandle = createNewGame(actions);\n\n        if (gameStore.continue) {\n            this.saveDataPrefabHandle = load(actions);\n        } else {\n            this.saveDataPrefabHandle = createGameFromSaveData(actions);\n        }\n\n        await actions.flushCommands();\n\n        for (const entity of actions.getEntities(new Query([\n            With(Shape)\n        ]))) {\n            entity.getComponent(Shape)?.build();\n        }\n\n        // actions.commands.queueCommand(() => setScoreCaptionMod(actions));\n        actions.commands.maintain();\n    }\n\n    destroy(actions: ITransitionActions) {\n        if (this.staticDataPrefabHandle) {\n            actions.commands.unloadPrefab(this.staticDataPrefabHandle);\n        }\n\n        if (this.saveDataPrefabHandle) {\n            actions.commands.unloadPrefab(this.saveDataPrefabHandle);\n        }\n\n        actions.commands.maintain();\n    }\n}\n\nconst createNewGame = function (actions: ITransitionActions) {\n    return actions.commands.load(\n        SerialFormat.fromArray(gamePrefab));\n};\n\nconst createGameFromSaveData = function (actions: ITransitionActions) {\n    return actions.commands.load(\n        SerialFormat.fromArray(savablePrefab));\n};\n\n// const setScoreCaptionMod = function (actions: ITransitionActions) {\n//     const score = actions.getResource(ScoreBoard);\n\n//     for (const entity of actions.getEntities(new Query([With(Paddle), With(UIItem)]))) {\n//         const ui = entity.getComponent(UIItem)!;\n//         const paddle = entity.getComponent(Paddle)!;\n\n//         if (paddle.side == EPaddleSide.Left) {\n//             ui.captionMod = strIn => strIn.replace('{}', score.left.toString());\n//         } else {\n//             ui.captionMod = strIn => strIn.replace('{}', score.right.toString());\n//         }\n//     }\n// };\n","import {ITransitionActions, SerialFormat, State, TGroupHandle} from \"sim-ecs\";\nimport {menuPrefab} from \"../prefabs/menu\";\nimport {InputSystem} from \"../systems/input\";\nimport {MenuSystem} from \"../systems/menu\";\nimport {RenderUISystem} from \"../systems/render-ui\";\nimport {GameStore} from \"../models/game-store\";\n\nexport class MenuState extends State {\n    _systems = [InputSystem, MenuSystem, RenderUISystem];\n    prefabHandle!: TGroupHandle;\n\n    activate(actions: ITransitionActions) {\n        actions.getResource(GameStore).currentState = this;\n        this.prefabHandle = actions.commands.load(SerialFormat.fromArray(menuPrefab));\n        actions.commands.maintain();\n    }\n\n    deactivate(actions: ITransitionActions) {\n        actions.commands.unloadPrefab(this.prefabHandle);\n        actions.commands.maintain();\n    }\n}\n","import {ITransitionActions, SerialFormat, State, TGroupHandle} from \"sim-ecs\";\nimport {InputSystem} from \"../systems/input\";\nimport {PauseSystem} from \"../systems/pause\";\nimport {pausePrefab} from \"../prefabs/pause\";\nimport {GameStore} from \"../models/game-store\";\nimport {save} from \"../app/persistence\";\nimport {RenderUISystem} from \"../systems/render-ui\";\nimport {RenderGameSystem} from \"../systems/render-game\";\n\nexport class PauseState extends State {\n    _systems = [InputSystem, PauseSystem, RenderGameSystem, RenderUISystem];\n    prefabHandle!: TGroupHandle;\n\n\n    activate(actions: ITransitionActions) {\n        const gameStore = actions.getResource(GameStore);\n        save(actions);\n\n        gameStore.currentState = this;\n        this.prefabHandle = actions.commands.load(SerialFormat.fromArray(pausePrefab));\n        actions.commands.maintain();\n    }\n\n    deactivate(actions: ITransitionActions) {\n        actions.commands.unloadPrefab(this.prefabHandle);\n        actions.commands.maintain();\n    }\n}\n","import {CTagMarker, ISystemActions, Query, Read, ReadEntity, System, With, WithTag, Write} from \"sim-ecs\";\nimport {Shape} from \"../components/shape\";\nimport {Collision} from \"../components/collision\";\nimport { Vector2D } from \"../models/vector2d\";\nimport { ETags } from \"../models/tags\";\nimport { Velocity } from \"../components/velocity\";\nimport { EMovement, GameStore } from \"../models/game-store\";\nimport { Character } from \"../components/character\";\n\nexport class CharacterSystem extends System {\n    readonly query = new Query({\n        _character: WithTag(ETags.character),\n        velocity: Write(Velocity),\n    });\n\n    gameStore!: GameStore;\n\n    setup(actions: ISystemActions) {\n        this.gameStore = actions.getResource(GameStore);\n    }\n\n    run(actions: ISystemActions) {\n        this.query.execute(({velocity}) => {\n            const dt = this.gameStore.lastFrameDeltaTime;\n\n            const {\n                characterMovement: move\n            } = this.gameStore.input.actions;\n\n            if ((move & EMovement.left) === EMovement.left) {\n                velocity.x = -1;\n            }\n            else if ((move & EMovement.right) === EMovement.right) {\n                velocity.x = 1;\n            } else {\n                velocity.x = 0;\n            }\n\n            if ((move & EMovement.up) === EMovement.up) {\n                velocity.y = -1;\n            }\n            else if ((move & EMovement.down) === EMovement.down) {\n                velocity.y = 1;\n            } else {\n                velocity.y = 0;\n            }\n\n            velocity.normalize();\n            velocity.scale(dt * 10000);\n            \n            // console.log(velocity);\n        });\n    }\n}\n","import {ISystemActions, Query, Read, ReadEntity, System, Write} from \"sim-ecs\";\nimport {Shape} from \"../components/shape\";\nimport {Collision} from \"../components/collision\";\nimport { Vector2D } from \"../models/vector2d\";\n\nexport class CollisionSystem extends System {\n    readonly query = new Query({\n        collision: Write(Collision),\n        entity: ReadEntity(),\n        position: Read(Vector2D),\n        shape: Read(Shape)\n    });\n\n    run(actions: ISystemActions) {\n        const rects = Array.from(this.query.iter())\n        .map(({collision, entity, position, shape}) => {\n            // ideally, this should be two separate steps,\n            // but JS would loop twice.\n            // As an optimization, I will include\n            // this data change into the map() function\n            collision.collisionObjects.clear();\n            collision.occurred = false;\n\n            const {\n                x,y,w,h\n            } = shape.getBBox();\n\n            return {\n                collisionData: collision,\n                entity,\n                width: w,\n                height: h,\n                x: position.x + x,\n                y: position.y + y,\n            };\n        });\n\n        // check for collision between all collision-enabled shapes\n        for (let i = 0; i < rects.length; i++) {\n            for (let j = 0; j < rects.length; j++) {\n                if (i == j) {\n                    continue;\n                }\n\n                const rect1 = rects[i];\n                const rect2 = rects[j];\n\n                // https://developer.mozilla.org/en-US/docs/Games/Techniques/2D_collision_detection\n                if (\n                    rect1.x < rect2.x + rect2.width &&\n                    rect1.x + rect1.width > rect2.x &&\n                    rect1.y < rect2.y + rect2.height &&\n                    rect1.y + rect1.height > rect2.y\n                ) {\n                    if (!rect1.collisionData.occurred) {\n                        rect1.collisionData.occurred = true;\n                        rect1.collisionData.collisionObjects.add(rect2.entity);\n                    }\n\n                    if (!rect2.collisionData.occurred) {\n                        rect2.collisionData.occurred = true;\n                        rect2.collisionData.collisionObjects.add(rect1.entity);\n                    }\n                }\n            }\n        }\n    }\n}\n","import {ISystemActions, System} from \"sim-ecs\";\nimport {EMovement, GameStore} from \"../models/game-store\";\n\nexport enum EKeyState {\n    Down,\n    Up,\n}\n\ninterface IInputEvent {\n    key: string\n    type: EKeyState\n}\n\nexport class InputSystem extends System {\n    gameStore!: GameStore;\n    inputEvents: IInputEvent[] = [];\n\n    setup(actions: ISystemActions) {\n        this.gameStore = actions.getResource(GameStore);\n\n        window.addEventListener('keydown', event => this.inputEvents.push({key: event.key, type: EKeyState.Down}));\n        window.addEventListener('keyup', event => this.inputEvents.push({key: event.key, type: EKeyState.Up}));\n    }\n\n    run(actions: ISystemActions) {\n        { // Reset input actions\n            this.gameStore.input.actions.menuConfirm = false;\n            this.gameStore.input.actions.menuMovement = EMovement.idle;\n            this.gameStore.input.actions.togglePause = false;\n        }\n\n        { // Work on all events which occurred during the last frame\n            for (const event of this.inputEvents) {\n                this.gameStore.input.keyStates[event.key] = event.type;\n\n                if (event.type == EKeyState.Down) {\n                    switch (event.key) {\n                        case 'ArrowLeft':\n                        case 'a':\n                        case 'A': {\n                            this.gameStore.input.actions.characterMovement |= EMovement.left;\n                            break;\n                        }\n                        case 'ArrowRight':\n                        case 'd':\n                        case 'D': {\n                            this.gameStore.input.actions.characterMovement |= EMovement.right;\n                            break;\n                        }\n                        case 'ArrowUp':\n                        case 'w':\n                        case 'W': {\n                            this.gameStore.input.actions.characterMovement |= EMovement.up;\n                            this.gameStore.input.actions.menuMovement = EMovement.up;\n                            \n                            break;\n                        }\n                        case 'ArrowDown':\n                        case 's':\n                        case 'S': {\n                            this.gameStore.input.actions.characterMovement |= EMovement.down;\n                            this.gameStore.input.actions.menuMovement = EMovement.down;\n                            \n                            break;\n                        }\n                        case 'Enter': {\n                            this.gameStore.input.actions.menuConfirm = true;\n                            break;\n                        }\n                        case 'Escape': {\n                            this.gameStore.input.actions.togglePause = true;\n                            break;\n                        }\n                    }\n                } else {\n                    switch (event.key) {\n                        case 'ArrowLeft':\n                        case 'a':\n                        case 'A': {\n                            this.gameStore.input.actions.characterMovement &= ~EMovement.left;\n                            break;\n                        }\n                        case 'ArrowRight':\n                        case 'd':\n                        case 'D': {\n                            this.gameStore.input.actions.characterMovement &= ~EMovement.right;\n                            break;\n                        }\n                        case 'ArrowUp':\n                        case 'w':\n                        case 'W': {\n                            this.gameStore.input.actions.characterMovement &= ~EMovement.up;\n                            this.gameStore.input.actions.menuMovement = EMovement.idle;\n                            \n                            break;\n                        }\n                        case 'ArrowDown':\n                        case 's':\n                        case 'S': {\n                            this.gameStore.input.actions.characterMovement &= ~EMovement.down;\n                            this.gameStore.input.actions.menuMovement = EMovement.idle;\n                            \n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        // Clear event queue\n        this.inputEvents.length = 0;\n    }\n}\n","import {ISystemActions, Query, System, Write} from \"sim-ecs\";\nimport {UIItem} from \"../components/ui-item\";\nimport {EMovement, GameStore} from \"../models/game-store\";\nimport {EActions} from \"../app/actions\";\nimport {GameState} from \"../states/game\";\nimport { MenuState } from \"../states/menu\";\n\nexport class MenuSystem extends System {\n    readonly _states = [\n        GameState,\n        MenuState\n    ]\n\n    readonly query = new Query({\n        uiItem: Write(UIItem)\n    });\n\n    actions!: ISystemActions\n    gameStore!: GameStore;\n    menuAction = EActions.Play;\n\n    setup(actions: ISystemActions) {\n        this.actions = actions;\n        this.gameStore = actions.getResource(GameStore);\n        console.log('setup Menu');\n    }\n\n    run(actions: ISystemActions) {\n        // todo: use index\n        if (this.gameStore.input.actions.menuMovement == EMovement.down) {\n            switch (this.menuAction) {\n                case EActions.Play: this.menuAction = EActions.Continue; break;\n                case EActions.Continue: this.menuAction = EActions.Exit; break;\n                case EActions.Exit: this.menuAction = EActions.Play; break;\n                default: {\n                    throw new Error(`Action ${this.menuAction} not implemented!`);\n                }\n            }\n        }\n        else if (this.gameStore.input.actions.menuMovement == EMovement.up) {\n            switch (this.menuAction) {\n                case EActions.Play: this.menuAction = EActions.Exit; break;\n                case EActions.Continue: this.menuAction = EActions.Play; break;\n                case EActions.Exit: this.menuAction = EActions.Continue; break;\n                default: {\n                    throw new Error(`Action ${this.menuAction} not implemented!`);\n                }\n            }\n        }\n\n        if (this.gameStore.input.actions.menuConfirm) {\n            if (this.menuAction == EActions.Play) {\n                this.actions.commands.pushState(GameState);\n            }\n            else if (this.menuAction == EActions.Continue) {\n                if (localStorage.getItem('save') == null) {\n                    alert('Sorry you werent saved lol');\n                    return;\n                }\n\n                this.gameStore.continue = true;\n                this.actions.commands.pushState(GameState);\n            }\n            else {\n                this.actions.commands.stopRun();\n            }\n\n            return;\n        }\n\n        for (const {uiItem} of this.query.iter()) {\n            uiItem.active = uiItem.action == this.menuAction;\n        }\n    }\n}\n","import {ISystemActions, Query, Read, System} from \"sim-ecs\";\nimport {GameStore} from \"../models/game-store\";\nimport {GameState} from \"../states/game\";\nimport {PauseState} from \"../states/pause\";\n\n\nexport class PauseSystem extends System {\n    actions!: ISystemActions\n    gameStore!: GameStore;\n\n    setup(actions: ISystemActions) {\n        this.actions = actions;\n        this.gameStore = actions.getResource(GameStore);\n    }\n\n    run(actions: ISystemActions) {\n        const isGameState = this.gameStore.currentState?.constructor == GameState;\n        const isPauseState = this.gameStore.currentState?.constructor == PauseState;\n\n        if (!isGameState && !isPauseState) {\n            return;\n        }\n\n        if (this.gameStore.input.actions.togglePause) {\n            if (isGameState) {\n                this.actions.commands.pushState(PauseState);\n            } else {\n                this.actions.commands.popState();\n            }\n        }\n    }\n}\n","import {ISystemActions, Query, Read, System, Write} from \"sim-ecs\";\nimport { Position } from \"../components/position\";\nimport {Velocity} from \"../components/velocity\";\nimport { GameStore } from \"../models/game-store\";\n\n\nexport class PhysicsSystem extends System {\n    readonly query = new Query({\n        pos: Write(Position),\n        vel: Read(Velocity),\n    });\n\n    run(_: ISystemActions) {\n        const dt = 0.016;\n\n        this.query.execute(({pos, vel}) => {\n            pos.x += vel.x * dt;\n            pos.y += vel.y * dt;\n        });\n    }\n}\n","import {ISystemActions, Query, Read, System} from \"sim-ecs\";\nimport {Shape, ShapePrimitive} from \"../components/shape\";\nimport { Position } from \"../components/position\";\nimport { Material } from \"../components/material\";\nimport { GameStore } from \"../models/game-store\";\nimport { IRect, Rect } from \"../models/rect\";\n\nconst TWOPI = Math.PI * 2;\n\nexport class RenderGameSystem extends System {\n    readonly query = new Query({\n        pos: Read(Position),\n        shape: Read(Shape),\n        material: Read(Material),\n    });\n\n    ctx!: CanvasRenderingContext2D;\n    gameStore!: GameStore;\n\n    setup(actions: ISystemActions): void | Promise<void> {\n        this.ctx = actions.getResource(CanvasRenderingContext2D);\n        this.gameStore = actions.getResource(GameStore);\n    }\n\n    runs = 0;\n\n    run(actions: ISystemActions) {\n        const viewport: IRect = {\n            x: 0,\n            y: 0,\n            w: this.ctx.canvas.width,\n            h: this.ctx.canvas.height,\n        };\n\n        const iter = Array.from(this.query.iter());\n\n        this.gameStore.drawables = iter.length;\n\n        const drawables = iter.filter(\n            ({pos, shape}) => {\n            const bbox = shape.getBBox();\n            const r: IRect = {\n                x: pos.x + bbox.x,\n                y: pos.y + bbox.y,\n                w: bbox.w,\n                h: bbox.h,\n            };\n\n            const inView = Rect.checkIntersects(r, viewport);\n\n            return inView;\n        })\n        .sort(({shape: a}, {shape: b}) => {\n            return a.zIndex - b.zIndex;\n        });\n\n        this.gameStore.rendered = drawables.length;\n\n        for (let i = 0; i < drawables.length; i++) {\n            const {pos, shape, material} = drawables[i];\n            \n            this.drawShape(pos, shape, material);\n        }\n    }\n\n    drawShape(pos: Position, shape: Shape, material: Material) {\n        const {\n            x: w, y: h\n        } = shape.dimensions;\n\n        const {\n            x, y\n        } = pos;\n\n        if (this.gameStore.debugShapes) {\n            this.ctx.save();\n            this.ctx.fillStyle = '#fff';\n            this.ctx.font = '1rem Arial';\n            const txt = `Z=${shape.zIndex}`;\n            this.ctx.fillText(txt, x, y-30);\n\n            this.ctx.strokeStyle = '#f0f';\n            const {\n                x:bx,y:by,w:bw,h:bh\n            } = shape.getBBox();\n            const padding = 5;\n            this.ctx.lineWidth = 1;\n            this.ctx.strokeRect(\n                x + bx - padding,\n                y + by - padding,\n                bw + padding*2,\n                bh + padding*2\n            );\n            this.ctx.restore();\n        }\n\n        // TODO: material options\n        this.ctx.fillStyle = material.color;\n\n        if (shape.primitive === ShapePrimitive.Rect) {\n            this.ctx.fillRect(x, y, w, h);\n        } else if (shape.primitive === ShapePrimitive.Circle) {\n            this.ctx.beginPath();\n            this.ctx.arc(x, y, w/2, 0, TWOPI);\n            this.ctx.fill();\n        } else if (shape.primitive === ShapePrimitive.Mesh\n            && shape.mesh) {\n            this.ctx.beginPath();\n\n            for (\n                let i = 0;\n                i < shape.mesh.verticies.length;\n                ++i\n            ) {\n                const {x:dx, y:dy} = shape.mesh.verticies[i];\n                this.ctx.lineTo(x+dx, y+dy);\n            }\n\n            this.ctx.closePath();\n\n            this.ctx.fill();\n        }\n    }\n}\n","\nimport {ISystemActions, Query, Read, System, With, WithTag} from \"sim-ecs\";\nimport {UIItem} from \"../components/ui-item\";\nimport { Position } from \"../components/position\";\nimport { GameStore } from \"../models/game-store\";\nimport { ETags } from \"../models/tags\";\n\nexport class RenderUISystem extends System {\n    readonly query = new Query({\n        _tag: WithTag(ETags.ui),\n        pos: Read(Position),\n        ui: Read(UIItem)\n    });\n\n    ctx!: CanvasRenderingContext2D;\n    toScreenCoords!: (x: number, y: number) => [number, number];\n\n    setup(actions: ISystemActions): void | Promise<void> {\n        this.ctx = actions.getResource(CanvasRenderingContext2D);\n    }\n\n    runs = 0;\n\n    run(actions: ISystemActions) {\n        this.ctx.textBaseline = 'top';\n\n        const gameStore = actions.getResource(GameStore);\n\n        this.query.execute(({pos, ui}) => {\n            this.ctx.fillStyle = ui.active\n                ? ui.activeColor ?? 'red'\n                : ui.color;\n            this.ctx.font = ui.active\n                ? `${ui.fontSize * 1.2}px serif`\n                : `${ui.fontSize}px serif`;\n            this.ctx.fillText(ui.finalCaption, pos.x, pos.y);\n        });\n\n        this.ctx.fillText(\n            `${\n                Math.floor(10*gameStore.timeSinceLevelLoaded)/10.0\n            } s.`,\n            this.ctx.canvas.width - 200, 20\n        );\n\n        this.ctx.fillText(\n            `${\n                Math.floor(gameStore.medianFps+0.5)\n            } FPS`,\n            this.ctx.canvas.width - 200, 60\n        );\n\n        this.ctx.fillText(\n            `${gameStore.rendered} / ${gameStore.drawables}`,\n            this.ctx.canvas.width - 200, 100\n        );\n\n        let str = gameStore.input.actions.characterMovement.toString(2);\n        str = '0'.repeat(4 - str.length) + str;\n        this.ctx.fillText(\n            `${str}`,\n            this.ctx.canvas.width - 200, 140\n        )\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcitylights\"] = self[\"webpackChunkcitylights\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [895], () => (__webpack_require__(3607)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","EActions","hrtime","previousTimestamp","clocktime","performance","now","seconds","Math","floor","nanoseconds","lastTransition","deltaSum","async","actions","gameStore","getResource","GameStore","s_ns","lastFrameDeltaTime","timeSinceLevelLoaded","medianFps","ticks","ctx","CanvasRenderingContext2D","beginPath","fillStyle","fillRect","canvas","width","height","saveKey","save","localStorage","getItem","Error","commands","load","SerialFormat","fromJSON","setItem","Query","WithTag","ETags","toJSON","constructor","name","shapeFromVisuals","shape","collisionObjects","Set","occurred","color","verticies","this","isConvex","Position","Vector2D","value","ShapePrimitive","ShapePivot","zIndex","pivot","Middle","dimensions","vecZero","primitive","Rect","mesh","bBox","isBuilt","build","console","log","Mesh","error","Circle","d","x","rad","y","w","h","minX","minY","maxX","maxY","i","length","getBBox","caption","fontSize","action","active","activeColor","captionMod","strIn","Velocity","prepareRenderContext","canvasEle","document","querySelector","renderContext","getContext","canvasBoundingRect","getBoundingClientRect","imageSmoothingEnabled","window","addEventListener","levels","Topdown","options","Object","keys","map","e","push","requestedLevel","world","run","prompt","join","catch","createWorld","addResource","destroy","stopRun","beforeStepHandler","beforeFrameHandler","initialState","MenuState","then","Level","super","clearRect","ECS","buildWorld","withSystem","PhysicsSystem","CharacterSystem","CollisionSystem","InputSystem","MenuSystem","PauseSystem","RenderGameSystem","RenderUISystem","withComponents","Collision","Material","Rotation","Shape","UIItem","Character","EMovement","drawables","rendered","debugShapes","continue","input","characterMovement","idle","menuConfirm","menuMovement","togglePause","keyStates","r1","r2","buf","ArrayBuffer","f32","Float32Array","u32","Uint32Array","addSelf","vec","subSelf","scale","factor","normalize","inv","invSqrt","x2","distance","to","dx","dy","sqrt","sqrDistance","sqrLength","vecOne","vecUp","vecDown","vecLeft","vecRight","gamePrefab","PI","menuPrefab","CTagMarker","ui","Play","Continue","Exit","pausePrefab","savablePrefab","character","GameState","State","_systems","activate","currentState","staticDataPrefabHandle","createNewGame","saveDataPrefabHandle","createGameFromSaveData","flushCommands","entity","getEntities","With","getComponent","maintain","unloadPrefab","fromArray","prefabHandle","deactivate","PauseState","System","query","_character","velocity","Write","setup","execute","dt","move","left","right","up","down","collision","ReadEntity","position","Read","rects","Array","from","iter","clear","collisionData","j","rect1","rect2","add","EKeyState","inputEvents","event","key","type","Down","Up","_states","uiItem","menuAction","pushState","alert","isGameState","isPauseState","popState","pos","vel","_","TWOPI","material","runs","viewport","filter","bbox","r","checkIntersects","sort","a","b","drawShape","font","txt","fillText","strokeStyle","bx","by","bw","bh","padding","lineWidth","strokeRect","restore","arc","fill","lineTo","closePath","_tag","textBaseline","finalCaption","str","toString","repeat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}