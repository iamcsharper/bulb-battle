{"version":3,"file":"main.js","mappings":"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","sources":["webpack://citylights/webpack/runtime/chunk loaded","webpack://citylights/webpack/runtime/load script","webpack://citylights/./src/app/actions.ts","webpack://citylights/./src/app/frame-transition-handlers.ts","webpack://citylights/./src/app/persistence.ts","webpack://citylights/./src/app/util.ts","webpack://citylights/./src/components/character.ts","webpack://citylights/./src/components/collision.ts","webpack://citylights/./src/components/material.ts","webpack://citylights/./src/components/mesh.ts","webpack://citylights/./src/components/physics-bridge.ts","webpack://citylights/./src/components/position.ts","webpack://citylights/./src/components/rotation.ts","webpack://citylights/./src/components/shape.ts","webpack://citylights/./src/components/ui-item.ts","webpack://citylights/./src/components/velocity.ts","webpack://citylights/./src/index.ts","webpack://citylights/./src/levels/level.h.ts","webpack://citylights/./src/levels/topdown.ts","webpack://citylights/./src/models/camera.ts","webpack://citylights/./src/models/game-store.ts","webpack://citylights/./src/models/rect.ts","webpack://citylights/./src/models/tags.ts","webpack://citylights/./src/models/vector2d.ts","webpack://citylights/./src/prefabs/game.ts","webpack://citylights/./src/prefabs/menu.ts","webpack://citylights/./src/prefabs/pause.ts","webpack://citylights/./src/prefabs/savable.ts","webpack://citylights/./src/server.ts","webpack://citylights/./src/states/game.ts","webpack://citylights/./src/states/menu.ts","webpack://citylights/./src/states/pause.ts","webpack://citylights/./src/systems/camera.ts","webpack://citylights/./src/systems/character.ts","webpack://citylights/./src/systems/collision.ts","webpack://citylights/./src/systems/input.ts","webpack://citylights/./src/systems/menu.ts","webpack://citylights/./src/systems/pause.ts","webpack://citylights/./src/systems/physics.ts","webpack://citylights/./src/systems/render-game.ts","webpack://citylights/./src/systems/render-ui.ts","webpack://citylights/webpack/bootstrap","webpack://citylights/webpack/runtime/define property getters","webpack://citylights/webpack/runtime/ensure chunk","webpack://citylights/webpack/runtime/get javascript chunk filename","webpack://citylights/webpack/runtime/get mini-css chunk filename","webpack://citylights/webpack/runtime/global","webpack://citylights/webpack/runtime/hasOwnProperty shorthand","webpack://citylights/webpack/runtime/make namespace object","webpack://citylights/webpack/runtime/publicPath","webpack://citylights/webpack/runtime/jsonp chunk loading","webpack://citylights/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"citylights:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","export enum EActions {\n    Continue,\n    Exit,\n    Play,\n}\n","import {GameStore} from \"../models/game-store\";\nimport {ITransitionActions} from \"sim-ecs\";\nimport { PauseState } from \"../states/pause\";\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp?: number[]){\n    const clocktime = performance.now() * 1e-3\n    let seconds = Math.floor(clocktime)\n    let nanoseconds = Math.floor((clocktime%1)*1e9)\n    if (previousTimestamp) {\n      seconds = seconds - previousTimestamp[0]\n      nanoseconds = nanoseconds - previousTimestamp[1]\n      if (nanoseconds<0) {\n        seconds--\n        nanoseconds += 1e9\n      }\n    }\n  \n    return [seconds, nanoseconds];\n}\n\nconst hrtimeToSeconds = (s_ns: number[]) => (\n  s_ns[0] + s_ns[1] * 1e-9\n);\n\nlet lastTransition = hrtime();\n\nlet deltaSum = 0;\n\nexport async function beforeFrameHandler(actions: ITransitionActions) {\n    const gameStore = actions.getResource(GameStore);\n\n    const isPauseState = gameStore.currentState?.constructor == PauseState;\n\n    if (!isPauseState) {\n      gameStore.lastFrameDeltaTime = hrtimeToSeconds(\n        hrtime(lastTransition)\n      );\n  \n      if (gameStore.lastFrameDeltaTime > 0.1) {\n        gameStore.lastFrameDeltaTime = 0.1;\n      }\n  \n      gameStore.timeSinceLevelLoaded += \n        gameStore.lastFrameDeltaTime; \n  \n      deltaSum += gameStore.lastFrameDeltaTime;\n      gameStore.medianFps = ++gameStore.ticks / deltaSum;\n  \n      lastTransition = hrtime();  \n    }\n\n    // Clear canvas\n    const ctx = actions.getResource(CanvasRenderingContext2D);\n    ctx.beginPath();\n    ctx.fillStyle = '#000';\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n}\n","import {ITransitionActions, Query, SerialFormat, TGroupHandle, WithTag} from \"sim-ecs\";\nimport {ETags} from \"../models/tags\";\n\n\nconst saveKey = 'save';\n\nexport function load(actions: ITransitionActions): TGroupHandle {\n    const save = localStorage.getItem(saveKey);\n\n    if (!save) {\n        throw new Error('No save available. Cannot load!');\n    }\n\n    const handle = actions.commands.load(SerialFormat.fromJSON(save));\n\n    return handle;\n}\n\nexport function save(actions: ITransitionActions) {\n    localStorage.setItem(saveKey, actions.save(new Query([WithTag(ETags.save)])).toJSON());\n}\n","export const TWOPI = Math.PI * 2;\nexport const drawPoint = (\n    ctx: CanvasRenderingContext2D,\n    x:number,\n    y:number,\n    size:number = 0.1\n) => {\n    ctx.beginPath();\n    ctx.fillStyle = 'rgba(255,255,255,0.7)';\n    ctx.arc(x, y, size, 0, TWOPI);\n    ctx.fill();\n}\n\nexport const PIXELS_PER_METER = 32;\n\nexport const lerp = (value1: number, value2: number, amount: number) => {\n    amount = amount < 0 ? 0 : amount;\n    amount = amount > 1 ? 1 : amount;\n    return value1 + (value2 - value1) * amount;\n}","export class Character {\n    constructor(\n        public name: string = '',\n    ) {}\n}","import { IEntity } from \"sim-ecs\";\nimport { Shape } from \"./shape\";\n\nexport class Collision {\n    constructor(\n        public shapeFromVisuals: boolean = true,\n        public shape: Shape | null = null\n    ) {\n        if (!shapeFromVisuals && !shape) {\n            throw new Error('Either copy the collision shape\\\n                from visuals or provide a new one')\n        } \n    }\n    \n    public collisionObjects: Set<IEntity> = new Set<IEntity>();\n    public occurred = false;\n}\n","export class Material {\n    constructor (\n        public color: string\n    ) {}\n}","import { IVector2D } from \"../models/vector2d\";\n\nexport class Mesh {\n    public isConvex: boolean;\n\n    constructor (public verticies: IVector2D[]) {\n        // TODO: test for convexness\n        this.isConvex = true;\n    }\n}","export class PhysicsBridge {\n    constructor(\n        public bodyPtr: Box2D.b2Body | null = null,\n    ) {\n\n    }\n}","import { Vector2D } from \"../models/vector2d\";\n\nexport class Position extends Vector2D {}\n","export class Rotation {\n    constructor(public value: number) {}\n}","import { Rect } from \"../models/rect\";\nimport { Vector2D, vecZero } from \"../models/vector2d\";\nimport { Mesh } from \"./mesh\";\n\nexport enum ShapePrimitive {\n    Circle = 'circle',\n    Rect = 'rect',\n    Mesh = 'mesh',\n}\n\nexport enum ShapePivot {\n    TopLeft = 0,\n    TopMiddle = 1,\n    TopRight = 2,\n    Left = 3,\n    Middle = 4,\n    Right = 5,\n    BottomLeft = 6,\n    BottomMiddle = 7,\n    BottomRight = 8\n}\n\nexport const ShapePivotNames:{\n    [key in ShapePivot]: string;\n} = {\n    [ShapePivot.TopLeft]: 'TopLeft',\n    [ShapePivot.TopMiddle]: 'TopMiddle',\n    [ShapePivot.TopRight]: 'TopRight',\n    [ShapePivot.Left]: 'Left',\n    [ShapePivot.Middle]: 'Middle',\n    [ShapePivot.Right]: 'Right',\n    [ShapePivot.BottomLeft]: 'BottomLeft',\n    [ShapePivot.BottomMiddle]: 'BottomMiddle',\n    [ShapePivot.BottomRight]: 'BottomRight',\n}\n\n// todo triangle, capsule\n\nexport class Shape {\n    public bBox: Rect = new Rect(0, 0, 0, 0);\n\n    public isBuilt = false;\n\n    /**\n     * \n     * @param dimensions (width,height) if rect, (diameter,any) if circle\n     * @param primitive Enum or string value\n     * @param mesh verticies data\n     */\n    constructor(\n        public zIndex = 0,\n        // TODO: make it real\n        public pivot = ShapePivot.Middle,\n        public offsetX = 0,\n        public offsetY = 0,\n        public dimensions: Vector2D = vecZero,\n        public primitive: ShapePrimitive = ShapePrimitive.Rect,\n        public mesh: Mesh | null = null,\n    ) {\n        \n    }\n\n    build() {\n        if (this.isBuilt) return;\n\n        if (this.primitive === ShapePrimitive.Mesh && !this.mesh) {\n            throw new Error('Shapes with mesh primitive\\\n                must provide a mesh data');\n        }\n        if (this.primitive !== ShapePrimitive.Mesh && !this.dimensions) {\n            console.error('dimensions:', this.dimensions,\n                'primitive:', this.primitive,\n                'mesh:', this.mesh);\n            throw new Error('Shapes with non-mesh primitive\\\n                must provide dimensions')\n        }\n\n        // All the shapes are cenetered by default\n\n        let minX = 0, minY = 0, maxX = 0, maxY = 0;\n\n        if (this.primitive === ShapePrimitive.Circle) {\n            // A center-positioned circle\n            // will fit into a mid-shifted\n            // square with side = diameter\n            const d = this.dimensions.x\n            const rad = d/2;\n            this.bBox.x = -rad;\n            this.bBox.y = -rad;\n            this.bBox.w = d;\n            this.bBox.h = d;\n        } else if (this.primitive === ShapePrimitive.Rect) {\n            // a top-left positioned rectangle\n            // is the bounding box itself\n            this.bBox.x = -this.dimensions.x/2;\n            this.bBox.y = -this.dimensions.y/2;\n            this.bBox.w = this.dimensions.x;\n            this.bBox.h = this.dimensions.y;\n        } else if (this.primitive === ShapePrimitive.Mesh && this.mesh) {\n            minX = this.mesh.verticies[0].x;\n            minY = this.mesh.verticies[0].y;\n\n            maxX = this.mesh.verticies[0].x;\n            maxY = this.mesh.verticies[0].y;\n\n            for (let i=1;i<this.mesh.verticies.length;++i){\n                const {x, y} = this.mesh.verticies[i];\n                if (x < minX) minX = x;\n                if (x > maxX) maxX = x;\n                if (y < minY) minY = y;\n                if (y > maxY) maxY = y;\n            }\n\n            this.bBox.w = maxX - minX;\n            this.bBox.h = maxY - minY;\n            this.bBox.x = -this.bBox.w/2;\n            this.bBox.y = -this.bBox.h/2;\n        }\n\n        if (this.pivot === ShapePivot.TopLeft) {\n            this.bBox.x += this.bBox.w/2;\n            this.bBox.y += this.bBox.h/2;\n        } else if (this.pivot === ShapePivot.TopMiddle) {\n            this.bBox.y += this.bBox.h/2;\n        } else if (this.pivot === ShapePivot.TopRight) {\n            this.bBox.x -= this.bBox.w/2;\n            this.bBox.y += this.bBox.h/2;\n        } else if (this.pivot === ShapePivot.Left) {\n            this.bBox.x += this.bBox.w/2;\n        } else if (this.pivot === ShapePivot.Right) {\n            this.bBox.x -= this.bBox.w/2;\n        } else if (this.pivot === ShapePivot.BottomLeft) {\n            this.bBox.x += this.bBox.w/2;\n            this.bBox.y -= this.bBox.h/2;\n        } else if (this.pivot === ShapePivot.BottomMiddle) {\n            this.bBox.y -= this.bBox.h/2;\n        } else if (this.pivot === ShapePivot.BottomRight) {\n            this.bBox.x -= this.bBox.w/2;\n            this.bBox.y -= this.bBox.h/2;\n        }\n\n        if (this.primitive === ShapePrimitive.Mesh && this.mesh) {\n            for (let i=0;i<this.mesh.verticies.length;++i){\n                this.mesh.verticies[i].x += (this.bBox.x - minX);\n                this.mesh.verticies[i].y += (this.bBox.y - minY);\n            }\n        }\n\n        this.isBuilt = true;\n    }\n\n    getBBox() {\n        return this.bBox;\n    }\n}\n","import {EActions} from \"../app/actions\";\n\nexport class UIItem {\n    public captionMod = (strIn: string) => strIn;\n\n    constructor(\n        public caption: string,\n        public color: string,\n        public fontSize: number,\n        public action?: EActions,\n        public active?: boolean,\n        public activeColor?: string,\n    ) {}\n\n    get finalCaption(): string {\n        return this.captionMod(this.caption);\n    }\n}","import { Vector2D } from \"../models/vector2d\";\n\nexport class Velocity extends Vector2D {\n    constructor(x:number, y: number, public angular: number) {\n        super(x, y);\n    }\n}\n","import './server';\nimport { Level } from './levels/level.h';\nimport { Topdown } from './levels/topdown';\nimport './scss/app.scss';\nimport { loadPhysics, _Box2D } from './server';\n\nexport const prepareRenderContext = () => {\n    const canvasEle = document.querySelector('canvas');\n    if (!canvasEle) throw new Error('Could not find canvas element!');\n\n    const renderContext = canvasEle.getContext('2d');\n    if (!renderContext) throw new Error('Could not initialize 2D context');\n\n    const canvasBoundingRect = canvasEle.getBoundingClientRect();\n\n    canvasEle.width = canvasBoundingRect.width;\n    canvasEle.height = canvasBoundingRect.height;\n\n    renderContext.imageSmoothingEnabled = false;\n\n    return renderContext;\n}\n\nwindow.addEventListener('resize', prepareRenderContext);\n\nconst levels:{\n    [name: string]: new (...args:[_Box2D]) => Level,\n} = {\n    'topdown': Topdown,\n};\n\ntype levelType = keyof typeof levels;\n\n// main function\n(async () => {\n    const box2D = await loadPhysics();\n\n    const options = Object.keys(levels)\n        .map((e,i) => (`${i+1}) ${e}`));\n    options.push('exit (or empty)');\n\n    let requestedLevel = 'topdown';\n\n    while (requestedLevel !== 'exit') {\n        const level = requestedLevel as levelType;\n        let world = new levels[level](box2D);\n\n        await world.run();\n\n        requestedLevel = prompt('What level would you like to check next?\\n' +\n            options.join('\\n')\n        ) || 'exit';\n    }\n})().catch(console.error);\n","import { IWorld } from \"sim-ecs\";\nimport { prepareRenderContext } from \"..\";\nimport { beforeFrameHandler } from \"../app/frame-transition-handlers\";\nimport { _Box2D } from \"../server\";\nimport { MenuState } from \"../states/menu\";\n\nexport interface ILevel {\n    name: string;\n\n    // TODO: load from filesystem, from URL\n    // path: string; \n\n    world: IWorld;\n\n    /**\n     * Called right after the initialization, main loop goes here\n     */\n    run(): Promise<any>;\n\n    /**\n     * Release the resources to run another level\n     */\n    destroy(): void;\n}\n\nexport abstract class Level implements ILevel {\n\n    public world: IWorld;\n\n    constructor(\n        public physics: _Box2D,\n        public name: string,\n    ) {\n        console.log('Level loaded', name);\n        const world = this.createWorld();\n\n        if (!world) {\n            throw new Error('A level must have a non-null \\\n            resuling createWorld function');\n        }\n\n        this.world = world;\n\n        const renderContext = prepareRenderContext();\n\n        this.world.addResource(renderContext);\n    }\n\n    abstract createWorld(): IWorld;\n    \n    /**\n     * Override this method if you have to release more resources\n     * (audio, video, WebRTC, textures, files, etc.)\n     */\n    destroy(): void {\n        this.world.commands.stopRun();\n    }\n\n    async run() {\n        return this.world.run({\n            beforeStepHandler: beforeFrameHandler,\n            initialState: MenuState,\n        }).then(()=>this.destroy());\n    }\n}","import { ECS, IWorld } from \"sim-ecs\";\nimport { Character } from \"../components/character\";\nimport { Collision } from \"../components/collision\";\nimport { Material } from \"../components/material\";\nimport { Mesh } from \"../components/mesh\";\nimport { PhysicsBridge } from \"../components/physics-bridge\";\nimport { Position } from \"../components/position\";\nimport { Rotation } from \"../components/rotation\";\nimport { Shape } from \"../components/shape\";\nimport { UIItem } from \"../components/ui-item\";\nimport { Velocity } from \"../components/velocity\";\nimport { Camera } from \"../models/camera\";\nimport { GameStore } from \"../models/game-store\";\nimport { _Box2D } from \"../server\";\nimport { CameraSystem } from \"../systems/camera\";\nimport { CharacterSystem } from \"../systems/character\";\nimport { CollisionSystem } from \"../systems/collision\";\nimport { InputSystem } from \"../systems/input\";\nimport { MenuSystem } from \"../systems/menu\";\nimport { PauseSystem } from \"../systems/pause\";\nimport { PhysicsSystem } from \"../systems/physics\";\nimport { RenderGameSystem } from \"../systems/render-game\";\nimport { RenderUISystem } from \"../systems/render-ui\";\nimport { Level } from \"./level.h\";\n\nexport class Topdown extends Level {\n    constructor(physics: _Box2D) {\n        super(physics, 'topdown');\n\n        const {\n            b2Vec2,\n            b2World\n        } = physics;\n\n        const gravity = new b2Vec2(0, 9.81);\n        const physWorld = new b2World(gravity);\n        this.world.addResource(physWorld);\n\n        const zero = new b2Vec2(0, 0);\n\n        const gameStore = new GameStore();\n        gameStore.physicsNamespace = physics;\n        gameStore.physicsZero = zero;\n\n        const camera = new Camera();\n\n        this.world.addResource(gameStore);\n        this.world.addResource(camera);\n    }\n\n    destroy() {\n        super.destroy();\n\n        const {\n            physicsNamespace,\n            physicsZero\n        } = this.world.getResource(GameStore);\n        const physicsWorld = this.world.getResource(physicsNamespace.b2World);\n\n        physicsNamespace.destroy(physicsWorld);\n        physicsNamespace.destroy(physicsZero);\n\n        const ctx = this.world.getResource(CanvasRenderingContext2D);\n        ctx.fillStyle = '#ececec';\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    }\n\n    createWorld(): IWorld {\n        return new ECS()\n            .buildWorld()\n            .withSystem(CameraSystem, [\n                CharacterSystem\n            ])\n            .withSystem(PhysicsSystem, [\n                CharacterSystem\n                // NetworkSystem\n            ])\n            .withSystem(CharacterSystem, [\n                CollisionSystem\n            ])\n            .withSystem(CollisionSystem, [\n                // NetworkSystem\n            ])\n            .withSystem(InputSystem)\n            .withSystem(MenuSystem, [\n                InputSystem\n            ])\n            .withSystem(PauseSystem, [\n                InputSystem\n            ])\n            .withSystem(RenderGameSystem, [\n                PhysicsSystem,\n                CharacterSystem,\n                // NetworkSystem,\n            ])\n            .withSystem(RenderUISystem, [\n                PhysicsSystem,\n                MenuSystem,\n                PauseSystem\n            ])\n            .withComponents(\n                Collision,\n                Material,\n                Mesh,\n                Position,\n                Rotation,\n                Shape,\n                UIItem,\n                Velocity,\n                Character,\n                PhysicsBridge,\n            )\n            .build();\n    }\n}","import { Velocity } from \"../components/velocity\";\nimport { IRect } from \"./rect\";\nimport { IVector2D } from \"./vector2d\";\n\nexport enum CameraFollowMethod {\n    Immediate,\n    Smooth,\n    Elastic\n}\n\nexport interface CameraFollow {\n    target: IVector2D\n    method: CameraFollowMethod\n    prevX: number\n    prevY: number\n}\n\nexport class Camera {\n    public viewport!: IRect;\n\n    constructor(\n        public x: number = 0,\n        public y: number = 0,\n        public offset: IVector2D = {\n            x: 0,\n            y: 0,\n        },\n        public vel: Velocity = <Velocity>{\n            x: 0,\n            y: 0\n        },\n        public zoom: number = 1,\n        public rotation: number = 0,\n        public follow?: CameraFollow,\n        public elasticity: number = 0.01,\n        public friction: number = 0.15,\n    ) {}\n}","import { EKeyState, EMouseState } from '../systems/input'\nimport {IState} from \"sim-ecs\";\nimport { _Box2D } from '../server';\nimport { IVector2D } from './vector2d';\n\nexport enum EMovement {\n    idle  = 0, // 0000\n    up    = 1, // 0001\n    down  = 2, // 0010\n    left  = 4, // 0100\n    right = 8, // 1000\n}\n\nexport class GameStore {\n    drawables = 0\n    rendered = 0\n\n    debugShapes = true\n    wasBlurred = false\n    wasIntentionallyPaused = false\n    continue = false\n    currentState?: IState\n    lastFrameDeltaTime = 0\n    ticks = 0\n    medianFps = 30\n    timeSinceLevelLoaded = 0\n    input: {\n        actions: {\n            characterMovement: EMovement\n            menuConfirm: boolean\n            togglePause: boolean\n            menuMovement: EMovement\n        }\n        wheel: number\n        cursorPos: IVector2D\n        cursorPosWorld: IVector2D\n        keyStates: Map<string, EKeyState>\n        mouseStates: Map<number, EMouseState>\n    } = {\n        actions: {\n            characterMovement: EMovement.idle,\n            menuConfirm: false,\n            menuMovement: EMovement.idle,\n            togglePause: false,\n        },\n        wheel: 0,\n        cursorPos: {x:-1, y:-1},\n        cursorPosWorld: {x:-1, y:-1},\n        keyStates: new Map<string, EKeyState>(),\n        mouseStates: new Map<number, EMouseState>(),\n    }\n    physicsNamespace!: _Box2D;\n    physicsZero!: Box2D.b2Vec2;\n    screenToWorld?: DOMMatrix;\n    worldToScreen?: DOMMatrix;\n}\n","import { IVector2D } from \"./vector2d\";\n\nexport interface IRect {\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n}\n\nexport class Rect implements IRect {\n    constructor(\n        public x: number,\n        public y: number,\n        public w: number,\n        public h: number,\n    ) {}\n\n    static checkPointInside(r: IRect, {x, y}: IVector2D) {\n        return !(\n            x < r.x || \n            x > r.x + r.w ||\n            y < r.y ||\n            y > r.y + r.h\n        );\n    }\n\n    static checkIntersects(r1: IRect, r2: IRect) {\n        return !(r2.x > r1.x+r1.w || \n            r2.x+r2.w < r1.x || \n            r2.y > r1.y+r1.h ||\n            r2.y+r2.h < r1.y);\n    }\n}","export enum ETags {\n    ui,\n    terrain,\n    character,\n    networkObject,\n    save,\n}\n","export interface IVector2D {\n    x: number;\n    y: number;\n}\n\nexport class Vector2D implements IVector2D {\n    buf = new ArrayBuffer(4);\n    f32 = new Float32Array(this.buf);\n    u32 = new Uint32Array(this.buf);\n\n    constructor(\n        public x = 0,\n        public y = 0,\n    ) {}\n\n    public addSelf(vec: Vector2D) {\n        this.x += vec.x;\n        this.y += vec.y;\n    }\n\n    public subSelf(vec: Vector2D) {\n        this.x -= vec.x;\n        this.y -= vec.y;\n    }\n\n    public scale(factor: number) {\n        this.x *= factor;\n        this.y *= factor;\n    }\n\n    public normalize() {\n        const inv = this.invSqrt();\n\n        this.x *= inv;\n        this.y *= inv;\n    }\n\n    public invSqrt(): number {\n        const x = this.x * this.x + this.y * this.y;\n        const x2 = 0.5 * (this.f32[0] = x);\n        this.u32[0] = (0x5f3759df - (this.u32[0] >> 1));\n        let y = this.f32[0];\n        y  = y * ( 1.5 - ( x2 * y * y ) );   // 1st iteration\n\n        return y;\n    }\n\n    public distance(to: Vector2D) {\n        const dx = to.x - this.x;\n        const dy = to.y - this.y;\n        return Math.sqrt(dx*dx + dy*dy);\n    }\n\n    public sqrDistance(to: Vector2D) {\n        const dx = to.x - this.x;\n        const dy = to.y - this.y;\n        return dx*dx + dy*dy;\n    }\n\n    public sqrLength() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    public length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n}\n\nexport const vecZero = new Vector2D(0, 0);\nexport const vecOne = new Vector2D(1, 1);\nexport const vecUp = new Vector2D(0, 1);\nexport const vecDown = new Vector2D(0, -1);\nexport const vecLeft = new Vector2D(-1, 0);\nexport const vecRight = new Vector2D(1, 0);","import {Shape, ShapePivot, ShapePrimitive} from \"../components/shape\";\nimport {Collision} from \"../components/collision\";\nimport { Material } from \"../components/material\";\nimport { Position } from \"../components/position\";\nimport { Velocity } from \"../components/velocity\";\nimport { Vector2D } from \"../models/vector2d\";\nimport { Mesh } from \"../components/mesh\";\nimport { Rotation } from \"../components/rotation\";\nimport { CTagMarker } from \"sim-ecs\";\nimport { ETags } from \"../models/tags\";\n\n// This could also be pure JSON, but in order to use TS types and have static checks it is recommended to write it as TS array.\nexport const gamePrefab = [\n    {\n        Collision: <Collision>{},\n        Position: <Position>{\n            x: 0,\n            y: 0,\n        },\n        Rotation: <Rotation>{\n            value: 0\n        },\n        Velocity: <Velocity>{\n            x: 1.5,\n            y: 0, \n        },\n        Material: <Material>{\n            color: '#fdff03'\n        },\n        Shape: <Shape>{\n            dimensions: <Vector2D>{\n                x: 2,\n                y: 0.7,\n            },\n            pivot: ShapePivot.TopLeft,\n            primitive: ShapePrimitive.Rect,\n        },\n    },\n    {\n        Collision: <Collision>{},\n        Position: <Position>{\n            x: 1,\n            y: 3,\n        },\n        Rotation: <Rotation>{\n            value: 0\n        },\n        Velocity: <Velocity>{\n            x: 2,\n            y: 0, \n        },\n        Material: <Material>{\n            color: '#fdff03'\n        },\n        Shape: <Shape>{\n            zIndex: 10,\n            pivot: ShapePivot.TopLeft,\n            dimensions: <Vector2D>{\n                x: 0.7,\n            },\n            primitive: ShapePrimitive.Circle,\n        },\n    },\n    {\n        Collision: <Collision>{},\n        Position: <Position>{\n            x: 18,\n            y: 0,\n        },\n        Rotation: <Rotation>{\n            value: 7 * Math.PI / 4\n        },\n        Velocity: <Velocity>{\n            x: 0,\n            y: 0, \n        },\n        Material: <Material>{\n            color: '#0bb'\n        },\n        Shape: <Shape>{\n            pivot: ShapePivot.Middle,\n            mesh: <Mesh>{\n                verticies: [\n                    {\n                        x: -3,\n                        y: -1.25\n                    },\n                    {\n                        x: 0.31,\n                        y: -0.31,\n                    },\n                    {\n                        x: 0,\n                        y: 0.31\n                    },\n                    {\n                        x: -1.6,\n                        y: 3\n                    }\n                ]\n            },\n            primitive: ShapePrimitive.Mesh,\n        },\n    },\n];\n","import { CTagMarker } from \"sim-ecs\";\nimport {EActions} from \"../app/actions\";\nimport { Position } from \"../components/position\";\nimport {UIItem} from \"../components/ui-item\";\nimport { ETags } from \"../models/tags\";\n\n// This could also be pure JSON, but in order to use TS types and have static checks it is recommended to write it as TS array.\nexport const menuPrefab = [\n    { // Title\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.05*1024,\n            y: 0.05*1024,\n        },\n        UIItem: <UIItem>{\n            caption: 'PONG',\n            color: '#ddd',\n            fontSize: 64,\n        }\n    },\n    { // Sub title\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.05*1024,\n            y: 0.12*1024,\n        },\n        UIItem: {\n            caption: 'A sim-ecs usage demo',\n            color: '#ddd',\n            fontSize: 24,\n        }\n    },\n    {\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.05*1024,\n            y: 0.2*1024,\n        },\n        UIItem: <UIItem>{\n            caption: 'How to play: Left paddle: W/S ; Right paddle: Up/Down ; Pause: Escape',\n            color: '#ddd',\n            fontSize: 24,\n        }\n    },\n    {\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.05*1024,\n            y: 0.24*1024,\n        },\n        UIItem: <UIItem>{\n            caption: 'The game will be saved upon pausing!',\n            color: '#ddd',\n            fontSize: 24,\n        }\n    },\n    {\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.15*1024,\n            y: 0.35*1024,\n        },\n        UIItem: <UIItem>{\n            action: EActions.Play,\n            active: true,\n            color: '#ddd',\n            caption: 'Play',\n            fontSize: 32,\n        },\n    },\n    {\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.15*1024,\n            y: 0.4*1024,\n        },\n        UIItem: <UIItem>{\n            action: EActions.Continue,\n            color: '#ddd',\n            caption: 'Continue',\n            fontSize: 32,\n        },\n    },\n    {\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 0.15*1024,\n            y: 0.45*1024,\n        },\n        UIItem: <UIItem>{\n            action: EActions.Exit,\n            color: '#ddd',\n            caption: 'Exit',\n            fontSize: 32,\n        },\n    },\n];\n","import { CTagMarker } from \"sim-ecs\";\nimport { Position } from \"../components/position\";\nimport {UIItem} from \"../components/ui-item\";\nimport { ETags } from \"../models/tags\";\n\n// This could also be pure JSON, but in order to use TS types and have static checks it is recommended to write it as TS array.\nexport const pausePrefab = [\n    {\n        [CTagMarker]: [\n            ETags.ui\n        ],\n        Position: <Position>{\n            x: 50,\n            y: 30,\n        },\n        UIItem: <UIItem>{\n            caption: '❚❚ PAUSE',\n            color: '#ddd',\n            fontSize: 64,\n        }\n    },\n];\n","import {ETags} from \"../models/tags\";\nimport {Collision} from \"../components/collision\";\nimport {Shape, ShapePivot, ShapePrimitive} from \"../components/shape\";\nimport {Velocity} from \"../components/velocity\";\nimport {CTagMarker} from 'sim-ecs';\nimport { Position } from \"../components/position\";\nimport { Material } from \"../components/material\";\nimport { Character } from \"../components/character\";\nimport { Rotation } from \"../components/rotation\";\nimport { PhysicsBridge } from \"../components/physics-bridge\";\n\nexport const savablePrefab = [\n    { // Character\n        [CTagMarker]: [\n            ETags.character,\n            // ETags.save\n        ],\n        // PhysicsBridge: <PhysicsBridge>{},\n        Character: <Character>{\n            name: 'XuPoH'\n        },\n        Velocity: <Velocity>{\n            x: 0,\n            y: 0,\n            angular: 0,\n        },\n        Collision: <Collision>{},\n        Rotation: <Rotation>{\n            value: 0\n        },\n        Position: <Position>{\n            x: 0,\n            y: 0,\n        },\n        Shape: <Shape>{\n            zIndex: 11,\n            dimensions: {\n                x: 1,\n            },\n            pivot: ShapePivot.Middle,\n            primitive: ShapePrimitive.Circle\n        },\n        Material: <Material>{\n            color: '#cca',\n        },\n    },\n];","import Box2DFactory from 'box2d-wasm';\n\nexport type _Box2D = typeof Box2D & EmscriptenModule;\n\nexport const loadPhysics = async () => {\n    return Box2DFactory().then((box2D: _Box2D) => {\n        return box2D;\n    });\n}","import {ITransitionActions, Query, SerialFormat, State, TGroupHandle, With, WithTag} from \"sim-ecs\";\nimport {InputSystem} from \"../systems/input\";\nimport {PauseSystem} from \"../systems/pause\";\nimport {gamePrefab} from \"../prefabs/game\";\nimport {Position} from \"../components/position\";\nimport {GameStore} from \"../models/game-store\";\nimport {Velocity} from \"../components/velocity\";\nimport {load} from \"../app/persistence\";\nimport {RenderUISystem} from \"../systems/render-ui\";\nimport {RenderGameSystem} from \"../systems/render-game\";\nimport {Shape, ShapePrimitive} from \"../components/shape\";\nimport {PhysicsSystem} from \"../systems/physics\";\nimport {UIItem} from \"../components/ui-item\";\nimport {CollisionSystem} from \"../systems/collision\";\nimport { CharacterSystem } from \"../systems/character\";\nimport {savablePrefab} from \"../prefabs/savable\";\nimport { ETags } from \"../models/tags\";\nimport { PhysicsBridge } from \"../components/physics-bridge\";\nimport { CameraSystem } from \"../systems/camera\";\n\nexport class GameState extends State {\n    _systems = [\n        PhysicsSystem,\n        CharacterSystem,\n        CollisionSystem,\n        InputSystem,\n        CameraSystem,\n        PauseSystem,\n        RenderGameSystem,\n        RenderUISystem,\n    ];\n    saveDataPrefabHandle?: TGroupHandle;\n    staticDataPrefabHandle?: TGroupHandle;\n\n    activate(actions: ITransitionActions) {\n        actions.getResource(GameStore).currentState = this;\n    }\n\n    async create(actions: ITransitionActions) {\n        const gameStore = actions.getResource(GameStore);\n\n        this.staticDataPrefabHandle = createNewGame(actions);\n\n        if (gameStore.continue) {\n            this.saveDataPrefabHandle = load(actions);\n        } else {\n            this.saveDataPrefabHandle = createGameFromSaveData(actions);\n        }\n\n        await actions.flushCommands();\n\n        for (const entity of actions.getEntities(new Query([\n            With(Shape)\n        ]))) {\n            entity.getComponent(Shape)?.build();\n        }\n\n        // init PhysicsBridge to real physics\n        const {\n            b2World,\n            b2CircleShape,\n            b2Shape,\n            b2PolygonShape,\n            b2BodyDef,\n            b2_dynamicBody,\n            b2Vec2,\n            destroy,\n        } = gameStore.physicsNamespace;\n\n        const physWorld = actions.getResource(b2World);\n\n        const zero = gameStore.physicsZero;\n\n        let physShape: Box2D.b2Shape | null = null;\n\n        for (const entity of actions.getEntities(new Query([\n            With(Shape),\n            With(Position),\n            With(PhysicsBridge)\n        ]))) {\n            const pos = entity.getComponent(Position)!;\n            const shape = entity.getComponent(Shape)!;\n            const physicsBridge = entity.getComponent(PhysicsBridge)!;\n\n            console.log('Adding to physics world:', pos, shape);\n\n            const vec = new b2Vec2(pos.x, pos.y);\n            const bd = new b2BodyDef();\n            \n            const {w, h} = shape.getBBox();\n\n            if (shape.primitive === ShapePrimitive.Rect) {\n                const _shape = new b2PolygonShape();\n                _shape.SetAsBox(w, h);\n                physShape = _shape;\n            } \n            else if (shape.primitive === ShapePrimitive.Circle) {\n                const _shape = new b2CircleShape();\n                _shape.set_m_radius(shape.dimensions.x / 2);\n                physShape = _shape;\n            } else {\n                console.error(shape.primitive, 'is not supported by physics now');\n            }\n\n            if (physShape) {\n                bd.set_type(b2_dynamicBody);\n                bd.set_position(vec);\n\n                const body = physWorld.CreateBody(bd);\n                vec.Set(0, 0);\n                body.SetTransform(vec, 0);\n                body.CreateFixture(physShape, 1);\n\n                destroy(vec);\n                destroy(physShape);\n\n                body.SetLinearVelocity(zero);\n                // TODO: control via physics system?\n                body.SetAwake(true);\n                body.SetEnabled(true);\n\n                physicsBridge.bodyPtr = body;\n            }\n        }\n\n        // actions.commands.queueCommand(() => setScoreCaptionMod(actions));\n        actions.commands.maintain();\n    }\n\n    destroy(actions: ITransitionActions) {\n        if (this.staticDataPrefabHandle) {\n            actions.commands.unloadPrefab(this.staticDataPrefabHandle);\n        }\n\n        if (this.saveDataPrefabHandle) {\n            actions.commands.unloadPrefab(this.saveDataPrefabHandle);\n        }\n\n        const {\n            physicsNamespace: {\n                b2World,\n                destroy\n            }\n        } = actions.getResource(GameStore);\n\n        destroy(actions.getResource(b2World));\n\n        actions.commands.maintain();\n    }\n}\n\nconst createNewGame = function (actions: ITransitionActions) {\n    return actions.commands.load(\n        SerialFormat.fromArray(gamePrefab));\n};\n\nconst createGameFromSaveData = function (actions: ITransitionActions) {\n    return actions.commands.load(\n        SerialFormat.fromArray(savablePrefab));\n};\n\n// const setScoreCaptionMod = function (actions: ITransitionActions) {\n//     const score = actions.getResource(ScoreBoard);\n\n//     for (const entity of actions.getEntities(new Query([With(Paddle), With(UIItem)]))) {\n//         const ui = entity.getComponent(UIItem)!;\n//         const paddle = entity.getComponent(Paddle)!;\n\n//         if (paddle.side == EPaddleSide.Left) {\n//             ui.captionMod = strIn => strIn.replace('{}', score.left.toString());\n//         } else {\n//             ui.captionMod = strIn => strIn.replace('{}', score.right.toString());\n//         }\n//     }\n// };\n","import {ITransitionActions, SerialFormat, State, TGroupHandle} from \"sim-ecs\";\nimport {menuPrefab} from \"../prefabs/menu\";\nimport {InputSystem} from \"../systems/input\";\nimport {MenuSystem} from \"../systems/menu\";\nimport {RenderUISystem} from \"../systems/render-ui\";\nimport {GameStore} from \"../models/game-store\";\n\nexport class MenuState extends State {\n    _systems = [InputSystem, MenuSystem, RenderUISystem];\n    prefabHandle!: TGroupHandle;\n\n    activate(actions: ITransitionActions) {\n        actions.getResource(GameStore).currentState = this;\n        this.prefabHandle = actions.commands.load(SerialFormat.fromArray(menuPrefab));\n        actions.commands.maintain();\n    }\n\n    deactivate(actions: ITransitionActions) {\n        actions.commands.unloadPrefab(this.prefabHandle);\n        actions.commands.maintain();\n    }\n}\n","import {ITransitionActions, SerialFormat, State, TGroupHandle} from \"sim-ecs\";\nimport {InputSystem} from \"../systems/input\";\nimport {PauseSystem} from \"../systems/pause\";\nimport {pausePrefab} from \"../prefabs/pause\";\nimport {GameStore} from \"../models/game-store\";\nimport {save} from \"../app/persistence\";\nimport {RenderUISystem} from \"../systems/render-ui\";\nimport {RenderGameSystem} from \"../systems/render-game\";\n\nexport class PauseState extends State {\n    _systems = [InputSystem, PauseSystem, RenderGameSystem, RenderUISystem];\n    prefabHandle!: TGroupHandle;\n\n\n    activate(actions: ITransitionActions) {\n        const gameStore = actions.getResource(GameStore);\n        save(actions);\n\n        gameStore.currentState = this;\n        this.prefabHandle = actions.commands.load(SerialFormat.fromArray(pausePrefab));\n        actions.commands.maintain();\n    }\n\n    deactivate(actions: ITransitionActions) {\n        actions.commands.unloadPrefab(this.prefabHandle);\n        actions.commands.maintain();\n    }\n}\n","import { _Box2D } from \"../server\";\nimport {ISystemActions, ReadEntity, Query, Read, System, Write} from \"sim-ecs\";\nimport { Position } from \"../components/position\";\nimport { Rotation } from \"../components/rotation\";\nimport {Velocity} from \"../components/velocity\";\nimport { GameStore } from \"../models/game-store\";\nimport { PhysicsBridge } from \"../components/physics-bridge\";\nimport { Camera, CameraFollowMethod } from \"../models/camera\";\nimport { lerp, PIXELS_PER_METER } from \"../app/util\";\n\nexport class CameraSystem extends System {\n    camera!: Camera;\n    ctx!: CanvasRenderingContext2D;\n\n    setup(actions: ISystemActions) {\n        this.ctx = actions.getResource(CanvasRenderingContext2D);\n        this.camera = actions.getResource(Camera);\n    }\n\n    run(_: ISystemActions) {\n        if (this.camera.rotation > 2*Math.PI) {\n            this.camera.rotation -= 2*Math.PI;\n        }\n        if (this.camera.rotation < -2*Math.PI) {\n            this.camera.rotation += 2*Math.PI;\n        }\n\n        if (this.camera.zoom < 0.1) {\n            this.camera.zoom = 0.1;\n        }\n\n        if (this.camera.zoom > 1.5) {\n            this.camera.zoom = 1.5;\n        }\n\n        const {\n            follow,\n            offset,\n        } = this.camera;\n\n        if (!follow) return;\n\n        const {\n            target,\n            method,\n        } = follow;\n\n        let tx = target.x;\n        let ty = target.y;\n\n        offset.x = -this.ctx.canvas.width / (2*this.camera.zoom*PIXELS_PER_METER);;\n        offset.y = -this.ctx.canvas.height / (2*this.camera.zoom*PIXELS_PER_METER);\n\n        if (method === CameraFollowMethod.Immediate) {\n            this.camera.x = tx;\n            this.camera.y = ty;\n        } else if (method === CameraFollowMethod.Smooth) {\n            this.camera.x = lerp(this.camera.x, tx, 0.01);\n            this.camera.y = lerp(this.camera.y, ty, 0.01);\n        } else if (method === CameraFollowMethod.Elastic) {\n            const dx = (tx - this.camera.x) * this.camera.elasticity;\n            const dy = (ty - this.camera.y) * this.camera.elasticity;\n\n            this.camera.vel.x += dx;\n            this.camera.vel.y += dy;\n\n            const fx = -this.camera.friction * this.camera.vel.x;\n            const fy = -this.camera.friction * this.camera.vel.y;\n\n            this.camera.vel.x += fx;\n            this.camera.vel.y += fy;\n\n            this.camera.x += this.camera.vel.x / this.camera.zoom;\n            this.camera.y += this.camera.vel.y / this.camera.zoom;\n        }\n    }\n}\n","import {CTagMarker, ISystemActions, Query, Read, ReadEntity, System, With, WithTag, Write} from \"sim-ecs\";\nimport {Shape} from \"../components/shape\";\nimport {Collision} from \"../components/collision\";\nimport { Vector2D } from \"../models/vector2d\";\nimport { ETags } from \"../models/tags\";\nimport { Velocity } from \"../components/velocity\";\nimport { EMovement, GameStore } from \"../models/game-store\";\nimport { Character } from \"../components/character\";\nimport { Position } from \"../components/position\";\nimport { Camera, CameraFollowMethod } from \"../models/camera\";\nimport { lerp, PIXELS_PER_METER } from \"../app/util\";\n\nexport class CharacterSystem extends System {\n    readonly query = new Query({\n        _character: WithTag(ETags.character),\n        pos: Read(Position),\n        velocity: Write(Velocity),\n    });\n\n    gameStore!: GameStore;\n    camera!: Camera;\n    ctx!: CanvasRenderingContext2D;\n\n    setup(actions: ISystemActions) {\n        this.ctx = actions.getResource(CanvasRenderingContext2D);\n        this.gameStore = actions.getResource(GameStore);\n        this.camera = actions.getResource(Camera);\n\n        this.camera.elasticity = 0.008;\n\n        this.camera.follow = {\n            method: CameraFollowMethod.Elastic,\n            target: {\n                x: this.camera.x,\n                y: this.camera.y,\n            },\n            prevX: this.camera.x,\n            prevY: this.camera.y,\n        }\n    }\n\n    runs = 0\n\n    run(actions: ISystemActions) {\n        this.camera.zoom += this.gameStore.input.wheel / 10;\n\n        this.query.execute(({pos, velocity}) => {\n            this.camera.follow!.target = pos;\n\n            const dt = this.gameStore.lastFrameDeltaTime;\n\n            const {\n                characterMovement: move\n            } = this.gameStore.input.actions;\n\n            const isLeft = (move & EMovement.left) === EMovement.left;\n            const isRight = (move & EMovement.right) === EMovement.right;\n            \n            velocity.x = 0;\n\n            if (isLeft && !isRight) {\n                velocity.x = -1;\n            }\n            if (isRight && !isLeft) {\n                velocity.x = 1;\n            }\n\n            if ((move & EMovement.up) === EMovement.up) {\n                velocity.y = -1;\n            }\n            else if ((move & EMovement.down) === EMovement.down) {\n                velocity.y = 1;\n            } else {\n                velocity.y = 0;\n            }\n\n            velocity.normalize();\n            velocity.scale(dt * 1000 * 10/PIXELS_PER_METER);\n            \n            // console.log(velocity);\n        });\n    }\n}\n","import {ISystemActions, Query, Read, ReadEntity, System, Write} from \"sim-ecs\";\nimport {Shape} from \"../components/shape\";\nimport {Collision} from \"../components/collision\";\nimport { Vector2D } from \"../models/vector2d\";\n\nexport class CollisionSystem extends System {\n    readonly query = new Query({\n        collision: Write(Collision),\n        entity: ReadEntity(),\n        position: Read(Vector2D),\n        shape: Read(Shape)\n    });\n\n    run(actions: ISystemActions) {\n        const rects = Array.from(this.query.iter())\n        .map(({collision, entity, position, shape}) => {\n            // ideally, this should be two separate steps,\n            // but JS would loop twice.\n            // As an optimization, I will include\n            // this data change into the map() function\n            collision.collisionObjects.clear();\n            collision.occurred = false;\n\n            const {\n                x,y,w,h\n            } = shape.getBBox();\n\n            return {\n                collisionData: collision,\n                entity,\n                width: w,\n                height: h,\n                x: position.x + x,\n                y: position.y + y,\n            };\n        });\n\n        // check for collision between all collision-enabled shapes\n        for (let i = 0; i < rects.length; i++) {\n            for (let j = 0; j < rects.length; j++) {\n                if (i == j) {\n                    continue;\n                }\n\n                const rect1 = rects[i];\n                const rect2 = rects[j];\n\n                // https://developer.mozilla.org/en-US/docs/Games/Techniques/2D_collision_detection\n                if (\n                    rect1.x < rect2.x + rect2.width &&\n                    rect1.x + rect1.width > rect2.x &&\n                    rect1.y < rect2.y + rect2.height &&\n                    rect1.y + rect1.height > rect2.y\n                ) {\n                    if (!rect1.collisionData.occurred) {\n                        rect1.collisionData.occurred = true;\n                        rect1.collisionData.collisionObjects.add(rect2.entity);\n                    }\n\n                    if (!rect2.collisionData.occurred) {\n                        rect2.collisionData.occurred = true;\n                        rect2.collisionData.collisionObjects.add(rect1.entity);\n                    }\n                }\n            }\n        }\n    }\n}\n","import * as KeyCode from 'keycode-js';\nimport {ISystemActions, System} from \"sim-ecs\";\nimport {EMovement, GameStore} from \"../models/game-store\";\n\nexport enum EKeyState {\n    Down,\n    Up,\n}\n\nexport enum EMouseState {\n    Down,\n    Up,\n    Move\n}\n\ninterface IKeyEvent {\n    code: string\n    type: EKeyState\n}\n\ninterface IMouseEvent {\n    type: EMouseState\n    button: number\n    x: number\n    y: number\n}\n\nexport class InputSystem extends System {\n    gameStore!: GameStore;\n    inputEvents: IKeyEvent[] = [];\n    mouseEvents: IMouseEvent[] = [];\n    wheelEvents: number[] = [];\n\n    readonly listeners = {\n        wheel: (e: WheelEvent) => (\n            this.wheelEvents.push(-e.deltaY / 125\n        )),\n        keydown: (e: KeyboardEvent) => this.inputEvents.push({\n            code: e.code,\n            type: EKeyState.Down\n        }),\n        keyup: (e: KeyboardEvent) => this.inputEvents.push({\n            code: e.code,\n            type: EKeyState.Up\n        }),\n        mousedown: (e: MouseEvent) => this.mouseEvents.push({\n            button: e.button,\n            type: EMouseState.Down,\n            x: e.clientX,\n            y: e.clientY,\n        }),\n        mouseup: (e:MouseEvent) => this.mouseEvents.push({\n            button: e.button,\n            type: EMouseState.Up,\n            x: e.clientX,\n            y: e.clientY,\n        }),\n        mousemove: (e: MouseEvent) => this.mouseEvents.push({\n            button: e.button,\n            type: EMouseState.Move,\n            x: e.clientX,\n            y: e.clientY,\n        }),\n        blur: () => {\n            this.gameStore.input.actions.characterMovement = EMovement.idle;\n            this.gameStore.input.actions.menuMovement = EMovement.idle;\n            this.gameStore.input.actions.togglePause = false;\n        },\n        focus: () => this.listeners.blur(),\n        contextmenu: (e: MouseEvent) => e.preventDefault(),\n    }\n\n    setup(actions: ISystemActions) {\n        this.gameStore = actions.getResource(GameStore);\n\n        for (const [event, handler] of Object.entries(this.listeners)) {\n            window.addEventListener(\n                event,\n                handler as EventListenerOrEventListenerObject\n            );\n        }\n    }\n\n    destroy(_: ISystemActions) {\n        super.destroy(_);\n\n        for (const [event, handler] of Object.entries(this.listeners)) {\n            window.removeEventListener(\n                event,\n                handler as EventListenerOrEventListenerObject\n            );\n        }\n    }\n\n    run(actions: ISystemActions) {\n        { // Reset input actions\n            this.gameStore.input.actions.menuConfirm = false;\n            this.gameStore.input.actions.menuMovement = EMovement.idle;\n            this.gameStore.input.actions.togglePause = false;\n        }\n\n        let event: IKeyEvent | undefined;\n\n        this.gameStore.input.keyStates.clear();\n\n        while ((event = this.inputEvents.pop())) {\n            this.gameStore.input.keyStates.set(event.code, event.type);\n\n            switch (event.code) {\n                case KeyCode.CODE_ENTER:\n                    if (event.type === EKeyState.Down)\n                        this.gameStore.input.actions.menuConfirm = true;\n                    break;\n                case KeyCode.CODE_ESCAPE:\n                    if (event.type === EKeyState.Down)\n                        this.gameStore.input.actions.togglePause = true;\n                    break;\n\n                case KeyCode.CODE_W:\n                case KeyCode.CODE_UP:\n                    if (event.type === EKeyState.Down) {\n                        this.gameStore.input.actions.characterMovement |= EMovement.up;\n                        this.gameStore.input.actions.characterMovement &= ~EMovement.down;\n                        this.gameStore.input.actions.menuMovement = EMovement.up;\n                    } else {\n                        this.gameStore.input.actions.characterMovement &= ~EMovement.up;\n                    }\n                    break;\n                case KeyCode.CODE_A:\n                case KeyCode.CODE_LEFT:\n                    if (event.type === EKeyState.Down) {\n                        this.gameStore.input.actions.characterMovement |= EMovement.left;\n                        this.gameStore.input.actions.characterMovement &= ~EMovement.right;\n                    } else\n                        this.gameStore.input.actions.characterMovement &= ~EMovement.left;\n                    break;\n                case KeyCode.CODE_S:\n                case KeyCode.CODE_DOWN:\n                    if (event.type === EKeyState.Down) {\n                        this.gameStore.input.actions.characterMovement |= EMovement.down;\n                        this.gameStore.input.actions.characterMovement &= ~EMovement.up;\n                        this.gameStore.input.actions.menuMovement = EMovement.down;\n                    } else {\n                        this.gameStore.input.actions.characterMovement &= ~EMovement.down;\n                    }\n                    this.gameStore.input.actions.menuMovement = this.gameStore.input.actions.characterMovement;\n                    break;\n                case KeyCode.CODE_D:\n                case KeyCode.CODE_RIGHT:\n                    if (event.type === EKeyState.Down) {\n                        this.gameStore.input.actions.characterMovement |= EMovement.right;\n                        this.gameStore.input.actions.characterMovement &= ~EMovement.left;\n                    } else\n                        this.gameStore.input.actions.characterMovement &= ~EMovement.right;\n                    break;\n            }\n        }\n\n        let mouseEvent: IMouseEvent | undefined;\n        this.gameStore.input.mouseStates.clear();\n\n        while ((mouseEvent = this.mouseEvents.pop())) {\n            const {\n                type,\n                x, y,\n                button\n            } = mouseEvent;\n\n            this.gameStore.input.mouseStates.set(button, type);\n\n            this.gameStore.input.cursorPos.x = x;\n            this.gameStore.input.cursorPos.y = y;\n        }\n\n        let wheelDelta: number | undefined;\n\n        this.gameStore.input.wheel = 0;\n\n        while ((wheelDelta = this.wheelEvents.pop())) {\n            this.gameStore.input.wheel = wheelDelta;\n        }\n    }\n}\n","import {ISystemActions, Query, System, Write} from \"sim-ecs\";\nimport {UIItem} from \"../components/ui-item\";\nimport {EMovement, GameStore} from \"../models/game-store\";\nimport {EActions} from \"../app/actions\";\nimport {GameState} from \"../states/game\";\nimport { MenuState } from \"../states/menu\";\n\nexport class MenuSystem extends System {\n    readonly _states = [\n        GameState,\n        MenuState\n    ]\n\n    readonly query = new Query({\n        uiItem: Write(UIItem)\n    });\n\n    actions!: ISystemActions\n    gameStore!: GameStore;\n    menuAction = EActions.Play;\n\n    setup(actions: ISystemActions) {\n        this.actions = actions;\n        this.gameStore = actions.getResource(GameStore);\n        console.log('setup Menu');\n    }\n\n    run(actions: ISystemActions) {\n        // todo: use index\n        if (this.gameStore.input.actions.menuMovement == EMovement.down) {\n            switch (this.menuAction) {\n                case EActions.Play: this.menuAction = EActions.Continue; break;\n                case EActions.Continue: this.menuAction = EActions.Exit; break;\n                case EActions.Exit: this.menuAction = EActions.Play; break;\n                default: {\n                    throw new Error(`Action ${this.menuAction} not implemented!`);\n                }\n            }\n        }\n        else if (this.gameStore.input.actions.menuMovement == EMovement.up) {\n            switch (this.menuAction) {\n                case EActions.Play: this.menuAction = EActions.Exit; break;\n                case EActions.Continue: this.menuAction = EActions.Play; break;\n                case EActions.Exit: this.menuAction = EActions.Continue; break;\n                default: {\n                    throw new Error(`Action ${this.menuAction} not implemented!`);\n                }\n            }\n        }\n\n        if (this.gameStore.input.actions.menuConfirm) {\n            if (this.menuAction == EActions.Play) {\n                this.actions.commands.pushState(GameState);\n            }\n            else if (this.menuAction == EActions.Continue) {\n                if (localStorage.getItem('save') == null) {\n                    alert('Sorry you werent saved lol');\n                    return;\n                }\n\n                this.gameStore.continue = true;\n                this.actions.commands.pushState(GameState);\n            }\n            else {\n                this.actions.commands.stopRun();\n            }\n\n            return;\n        }\n\n        for (const {uiItem} of this.query.iter()) {\n            uiItem.active = uiItem.action == this.menuAction;\n        }\n    }\n}\n","import {ISystemActions, Query, Read, System} from \"sim-ecs\";\nimport {GameStore} from \"../models/game-store\";\nimport {GameState} from \"../states/game\";\nimport {PauseState} from \"../states/pause\";\n\n\nexport class PauseSystem extends System {\n    actions!: ISystemActions\n    gameStore!: GameStore;\n\n    setup(actions: ISystemActions) {\n        this.actions = actions;\n        this.gameStore = actions.getResource(GameStore);\n\n        // if only we could create an inline function...\n        window.addEventListener('blur', () => {\n            const isGameState = this.gameStore.currentState?.constructor == GameState;\n            const isPauseState = this.gameStore.currentState?.constructor == PauseState;\n        \n            if (!isGameState && !isPauseState)\n                return;\n\n            if (!isPauseState) {\n                this.actions.commands.pushState(PauseState);\n                this.gameStore.wasBlurred = true;\n            }\n        });\n\n        window.addEventListener('focus', () => {\n            if (\n                this.gameStore.wasBlurred &&\n                !this.gameStore.wasIntentionallyPaused\n            ) {\n                this.actions.commands.popState();\n            }\n        });\n    }\n\n    run(actions: ISystemActions) {\n        const isGameState = this.gameStore.currentState?.constructor == GameState;\n        const isPauseState = this.gameStore.currentState?.constructor == PauseState;\n\n        if (!isGameState && !isPauseState) {\n            return;\n        }\n\n        if (this.gameStore.input.actions.togglePause) {\n            if (isGameState) {\n                this.gameStore.wasIntentionallyPaused = true;\n                this.actions.commands.pushState(PauseState);\n            } else {\n                this.gameStore.wasIntentionallyPaused = false;\n                this.actions.commands.popState();\n            }\n        }\n    }\n}\n","import { _Box2D } from \"../server\";\nimport {ISystemActions, ReadEntity, Query, Read, System, Write} from \"sim-ecs\";\nimport { Position } from \"../components/position\";\nimport { Rotation } from \"../components/rotation\";\nimport {Velocity} from \"../components/velocity\";\nimport { GameStore } from \"../models/game-store\";\nimport { PhysicsBridge } from \"../components/physics-bridge\";\n\n\nexport class PhysicsSystem extends System {\n    readonly query = new Query({\n        entity: ReadEntity(),\n        pos: Write(Position),\n        rot: Write(Rotation),\n        vel: Read(Velocity),\n    });\n\n    physWorld!: Box2D.b2World;\n\n    setup(actions: ISystemActions) {\n        const {\n            physicsNamespace: {\n                b2World\n            }\n        } = actions.getResource(GameStore);\n        this.physWorld = actions.getResource(b2World);\n    }\n\n    run(actions: ISystemActions) {\n        const dt = 0.016;\n\n        const {\n            physicsNamespace: {\n                getPointer,\n                NULL\n            }\n        } = actions.getResource(GameStore);\n\n        // const hashBodies:Record<number, Box2D.b2Body> = {};\n        // let ptr: number;\n\n        // for (\n        //     let body = this.physWorld.GetBodyList();\n        //     (ptr = getPointer(body)) !== getPointer(NULL);\n        //     body = body.GetNext()\n        // ) {\n        //     hashBodies[ptr] = body;\n        // }\n\n        this.query.execute(({entity, pos, rot, vel}) => {\n            const phys = entity.getComponent(PhysicsBridge);\n            if (phys) {\n                const body = phys.bodyPtr;\n                if (!body) return;\n                const {x, y} = body.GetPosition();\n                console.log(x, y);\n\n                pos.x = x;\n                pos.y = y;\n            } else {\n                pos.x += vel.x * dt;\n                pos.y += vel.y * dt;\n                rot.value += vel.angular * dt;\n            }\n        });\n\n        this.physWorld.Step(dt, 1, 1);\n    }\n}\n","import {ISystemActions, Query, Read, System, Write} from \"sim-ecs\";\nimport {Shape, ShapePivotNames, ShapePrimitive} from \"../components/shape\";\nimport { Position } from \"../components/position\";\nimport { Material } from \"../components/material\";\nimport { GameStore } from \"../models/game-store\";\nimport { IRect, Rect } from \"../models/rect\";\nimport { Camera } from \"../models/camera\";\nimport { Rotation } from \"../components/rotation\";\nimport { drawPoint, PIXELS_PER_METER, TWOPI } from \"../app/util\";\n\nexport class RenderGameSystem extends System {\n    readonly query = new Query({\n        pos: Read(Position),\n        rot: Write(Rotation),\n        shape: Read(Shape),\n        material: Read(Material),\n    });\n\n    ctx!: CanvasRenderingContext2D;\n    gameStore!: GameStore;\n    camera!: Camera;\n\n    // TODO: remove\n    controls!: HTMLElement;\n\n    setup(actions: ISystemActions): void | Promise<void> {\n        this.ctx = actions.getResource(CanvasRenderingContext2D);\n        this.gameStore = actions.getResource(GameStore);\n        this.camera = actions.getResource(Camera);\n\n        this.controls = document.querySelector('#controls')!;\n    }\n\n    runs = 0;\n\n    run(actions: ISystemActions) {\n        const viewport: IRect = {\n            x: this.camera.x + this.camera.offset.x,\n            y: this.camera.y + this.camera.offset.y,\n            w: this.ctx.canvas.width / (this.camera.zoom*PIXELS_PER_METER),\n            h: this.ctx.canvas.height / (this.camera.zoom*PIXELS_PER_METER),\n        };\n\n        this.camera.viewport = viewport;\n\n        this.ctx.save();\n        this.ctx.scale(\n            PIXELS_PER_METER*this.camera.zoom,\n            PIXELS_PER_METER*this.camera.zoom\n        );\n\n        this.ctx.translate(\n            -viewport.x,\n            -viewport.y\n        );\n\n        this.ctx.translate(\n            this.camera.x,\n            this.camera.y\n        );\n        this.ctx.rotate(this.camera.rotation);\n        this.ctx.translate(\n            -this.camera.x,\n            -this.camera.y\n        );\n\n        this.gameStore.worldToScreen = this.ctx.getTransform();\n        this.gameStore.screenToWorld = this.ctx.getTransform().inverse();\n\n        //mx,my - cursor coords in Screen space\n        const {\n            x:mx, y:my\n        } = this.gameStore.input.cursorPos;\n\n        // transform matrix significat values\n        const {\n            a,b,c,d,e,f\n        } = this.gameStore.screenToWorld;\n\n        // a c e  x  a*x + c*y + e*z\n        // b d f  y  b*x + d*y + f*z\n        // 0 0 1  z  ?\n\n        // cursor coords in world space\n        this.gameStore.input.cursorPosWorld.x = a*mx + c*my + e;\n        this.gameStore.input.cursorPosWorld.y = b*mx + d*my + f;\n\n        // const {\n        //     x:newX,\n        //     y:newY\n        // } = this.gameStore.input.cursorPosWorld;\n\n        // // Draws a cursor point in world space \n        // drawPoint(this.ctx, \n        //     newX,\n        //     newY, \n        //     1);\n\n        // this.ctx.font = '0.5px Arial';\n        // this.ctx.fillText(`${Math.floor(newX*1e3)*1e-3}, \n        // ${Math.floor(newY*1e3)*1e-3}`, newX, newY - 0.8);\n\n        const rows = 10;\n        const cols = 18;\n\n        const perCol = this.ctx.canvas.width/(cols*PIXELS_PER_METER);\n        const perRow = this.ctx.canvas.height/(rows*PIXELS_PER_METER);\n\n        for (let i = 0; i < rows; i++) {\n            for (let j = 0; j < cols; j++) {\n                const x = j * perCol;\n                const y = i * perRow;\n                this.ctx.lineWidth = 2/32;\n                this.ctx.strokeStyle = '#dadada';\n                this.ctx.strokeRect(\n                    x,y, perCol, perRow\n                );\n            }\n        }\n\n        const iter = Array.from(this.query.iter());\n\n        this.gameStore.drawables = iter.length;\n\n        const drawables = iter.filter(\n            ({pos, shape}) => {\n            const bbox = shape.getBBox();\n            const r: IRect = {\n                x: pos.x + bbox.x,\n                y: pos.y + bbox.y,\n                w: bbox.w,\n                h: bbox.h,\n            };\n\n            const inView = Rect.checkIntersects(r, viewport);\n\n            return inView;\n        })\n        .sort(({shape: a}, {shape: b}) => {\n            return a.zIndex - b.zIndex;\n        });\n\n        this.gameStore.rendered = drawables.length;\n\n        for (let i = 0; i < drawables.length; i++) {\n            const {pos, shape, rot, material} = drawables[i];\n            \n            this.drawShape(pos, shape, material, rot);\n        }\n\n        this.ctx.restore();\n    }\n\n    drawShape(pos: Position, shape: Shape, material: Material, rot: Rotation) {\n        const {\n            x: w, y: h\n        } = shape.dimensions;\n\n        const {\n            x: bx, y: by,\n            w: bw, h: bh,\n        } = shape.getBBox();\n\n        const {\n            x, y\n        } = pos;\n\n        // TODO: one system that checks all raycasts\n        // Rect.checkPointInside(r, mouse);\n\n        this.ctx.save();\n        this.ctx.translate(x, y);\n        this.ctx.rotate(rot.value);\n\n        // TODO: material options\n        this.ctx.fillStyle = material.color;\n\n        if (shape.primitive === ShapePrimitive.Rect) {\n            this.ctx.fillRect(bx, by, w, h);\n        } else if (shape.primitive === ShapePrimitive.Circle) {\n            this.ctx.beginPath();\n            this.ctx.arc(bx+w/2, bx+w/2, w/2, 0, TWOPI);\n            this.ctx.fill();\n        } else if (shape.primitive === ShapePrimitive.Mesh\n            && shape.mesh) {\n            this.ctx.beginPath();\n\n            const {offsetX, offsetY} = shape;\n            \n            for (\n                let i = 0;\n                i < shape.mesh.verticies.length;\n                ++i\n            ) {\n                const {x:dx, y:dy} = shape.mesh.verticies[i];\n                this.ctx.lineTo(dx+offsetX, dy+offsetY);\n            }\n\n            this.ctx.closePath();\n            this.ctx.fill();\n        }\n\n        if (this.gameStore.debugShapes) {\n            this.ctx.save();\n            this.ctx.fillStyle = '#fff';\n            this.ctx.font = '0.1rem Arial';\n            this.ctx.fillText(`Z=${\n                shape.zIndex\n            },x=${Math.floor(x)},y=${Math.floor(y)}`, 0, -by-2);\n            this.ctx.fillText(`Pivot=${ShapePivotNames[shape.pivot]}`, 0, -by-3);\n\n            this.ctx.strokeStyle = '#f0f';\n            const padding = 0;\n            this.ctx.lineWidth = 0.1;\n            this.ctx.strokeRect(\n                bx - padding,\n                by - padding,\n                bw + padding*2,\n                bh + padding*2\n            );\n            this.ctx.restore();\n\n            drawPoint(this.ctx, 0, 0);\n        }\n        \n        this.ctx.restore();\n    }\n}\n","\nimport {ISystemActions, Query, Read, System, With, WithTag} from \"sim-ecs\";\nimport {UIItem} from \"../components/ui-item\";\nimport { Position } from \"../components/position\";\nimport { GameStore } from \"../models/game-store\";\nimport { ETags } from \"../models/tags\";\nimport { drawPoint } from \"../app/util\";\n\nexport class RenderUISystem extends System {\n    readonly query = new Query({\n        _tag: WithTag(ETags.ui),\n        pos: Read(Position),\n        ui: Read(UIItem)\n    });\n\n    ctx!: CanvasRenderingContext2D;\n    gameStore!: GameStore;\n    toScreenCoords!: (x: number, y: number) => [number, number];\n\n    setup(actions: ISystemActions): void | Promise<void> {\n        this.ctx = actions.getResource(CanvasRenderingContext2D);\n        this.gameStore = actions.getResource(GameStore);\n    }\n\n    runs = 0;\n\n    run(actions: ISystemActions) {\n        this.ctx.textBaseline = 'top';\n\n        this.ctx.save();\n\n        this.query.execute(({pos, ui}) => {\n            this.ctx.fillStyle = ui.active\n                ? ui.activeColor ?? 'red'\n                : ui.color;\n            this.ctx.font = ui.active\n                ? `${ui.fontSize * 1.2}px serif`\n                : `${ui.fontSize}px serif`;\n            this.ctx.fillText(ui.finalCaption, pos.x, pos.y);\n        });\n\n        this.ctx.restore();\n\n        this.ctx.font = '32px serif';\n        this.ctx.fillStyle = '#fff';\n\n        this.ctx.fillText(\n            `${\n                Math.floor(10*this.gameStore.timeSinceLevelLoaded)/10.0\n            } s.`,\n            this.ctx.canvas.width - 200, 20\n        );\n\n        this.ctx.fillText(\n            `${\n                Math.floor(this.gameStore.medianFps+0.5)\n            } FPS`,\n            this.ctx.canvas.width - 200, 60\n        );\n\n        this.ctx.fillText(\n            `${this.gameStore.rendered} / ${this.gameStore.drawables}`,\n            this.ctx.canvas.width - 200, 100\n        );\n        {\n            let str =this.gameStore.input.actions.characterMovement.toString(2);\n            str = '0'.repeat(4 - str.length) + str;\n            this.ctx.fillText(\n                `${str}`,\n                this.ctx.canvas.width - 200, 140\n            )\n        }\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcitylights\"] = self[\"webpackChunkcitylights\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [319], () => (__webpack_require__(3607)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","EActions","hrtime","previousTimestamp","clocktime","performance","now","seconds","Math","floor","nanoseconds","lastTransition","deltaSum","async","actions","gameStore","getResource","GameStore","s_ns","currentState","constructor","PauseState","lastFrameDeltaTime","timeSinceLevelLoaded","medianFps","ticks","ctx","CanvasRenderingContext2D","beginPath","fillStyle","fillRect","canvas","width","height","saveKey","save","localStorage","getItem","Error","commands","load","SerialFormat","fromJSON","setItem","Query","WithTag","ETags","toJSON","TWOPI","PI","drawPoint","x","y","size","arc","fill","PIXELS_PER_METER","lerp","value1","value2","amount","name","shapeFromVisuals","shape","collisionObjects","Set","occurred","color","verticies","this","isConvex","bodyPtr","Position","Vector2D","value","ShapePrimitive","ShapePivot","ShapePivotNames","TopLeft","TopMiddle","TopRight","Left","Middle","Right","BottomLeft","BottomMiddle","BottomRight","zIndex","pivot","offsetX","offsetY","dimensions","vecZero","primitive","Rect","mesh","bBox","isBuilt","build","Mesh","console","error","minX","minY","maxX","maxY","Circle","d","rad","w","h","i","length","getBBox","caption","fontSize","action","active","activeColor","captionMod","strIn","Velocity","angular","super","prepareRenderContext","canvasEle","document","querySelector","renderContext","getContext","canvasBoundingRect","getBoundingClientRect","imageSmoothingEnabled","window","addEventListener","levels","Topdown","box2D","loadPhysics","options","Object","keys","map","e","push","requestedLevel","world","run","prompt","join","catch","physics","log","createWorld","addResource","destroy","stopRun","beforeStepHandler","beforeFrameHandler","initialState","MenuState","then","Level","b2Vec2","b2World","physWorld","zero","physicsNamespace","physicsZero","camera","Camera","physicsWorld","clearRect","ECS","buildWorld","withSystem","CameraSystem","CharacterSystem","PhysicsSystem","CollisionSystem","InputSystem","MenuSystem","PauseSystem","RenderGameSystem","RenderUISystem","withComponents","Collision","Material","Rotation","Shape","UIItem","Character","PhysicsBridge","CameraFollowMethod","offset","vel","zoom","rotation","follow","elasticity","friction","EMovement","drawables","rendered","debugShapes","wasBlurred","wasIntentionallyPaused","continue","input","characterMovement","idle","menuConfirm","menuMovement","togglePause","wheel","cursorPos","cursorPosWorld","keyStates","Map","mouseStates","r","r1","r2","buf","ArrayBuffer","f32","Float32Array","u32","Uint32Array","addSelf","vec","subSelf","scale","factor","normalize","inv","invSqrt","x2","distance","to","dx","dy","sqrt","sqrDistance","sqrLength","vecOne","vecUp","vecDown","vecLeft","vecRight","gamePrefab","menuPrefab","CTagMarker","ui","Play","Continue","Exit","pausePrefab","savablePrefab","character","GameState","State","_systems","activate","staticDataPrefabHandle","createNewGame","saveDataPrefabHandle","createGameFromSaveData","flushCommands","entity","getEntities","With","getComponent","b2CircleShape","b2Shape","b2PolygonShape","b2BodyDef","b2_dynamicBody","physShape","pos","physicsBridge","bd","_shape","SetAsBox","set_m_radius","set_type","set_position","body","CreateBody","SetTransform","CreateFixture","SetLinearVelocity","SetAwake","SetEnabled","maintain","unloadPrefab","fromArray","prefabHandle","deactivate","System","setup","_","target","method","tx","ty","Immediate","Smooth","Elastic","fx","fy","query","_character","Read","velocity","Write","runs","prevX","prevY","execute","dt","move","isLeft","left","isRight","right","up","down","collision","ReadEntity","position","rects","Array","from","iter","clear","collisionData","j","rect1","rect2","add","EKeyState","EMouseState","inputEvents","mouseEvents","wheelEvents","listeners","deltaY","keydown","code","type","Down","keyup","Up","mousedown","button","clientX","clientY","mouseup","mousemove","Move","blur","focus","contextmenu","preventDefault","event","handler","entries","removeEventListener","mouseEvent","wheelDelta","pop","set","KeyCode","CODE_ENTER","CODE_ESCAPE","CODE_W","CODE_UP","CODE_A","CODE_LEFT","CODE_S","CODE_DOWN","CODE_D","CODE_RIGHT","_states","uiItem","menuAction","pushState","alert","isGameState","isPauseState","popState","rot","getPointer","NULL","phys","GetPosition","Step","material","controls","viewport","translate","rotate","worldToScreen","getTransform","screenToWorld","inverse","mx","my","a","b","c","f","perCol","perRow","lineWidth","strokeStyle","strokeRect","filter","bbox","checkIntersects","sort","drawShape","restore","bx","by","bw","bh","lineTo","closePath","font","fillText","padding","_tag","textBaseline","finalCaption","str","toString","repeat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","key","splice","definition","o","defineProperty","enumerable","get","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","l","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","setTimeout","bind","head","appendChild","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","replace","p","baseURI","self","href","installedChunks","installedChunkData","promise","resolve","reject","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}